-- MySQL dump 10.13  Distrib 5.7.20, for Linux (x86_64)
--
-- Host: localhost    Database: myflask
-- ------------------------------------------------------
-- Server version	5.7.20

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `alembic_version`
--
create database `myflask` default character set utf8 collate utf8_general_ci;
 
use myflask;

DROP TABLE IF EXISTS `alembic_version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `alembic_version` (
  `version_num` varchar(32) NOT NULL,
  PRIMARY KEY (`version_num`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `alembic_version`
--

LOCK TABLES `alembic_version` WRITE;
/*!40000 ALTER TABLE `alembic_version` DISABLE KEYS */;
INSERT INTO `alembic_version` VALUES ('cb34fd802134');
/*!40000 ALTER TABLE `alembic_version` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `answer`
--

DROP TABLE IF EXISTS `answer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL,
  `answer_time` datetime DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `author_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `author_id` (`author_id`),
  KEY `question_id` (`question_id`),
  CONSTRAINT `answer_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `user` (`id`),
  CONSTRAINT `answer_ibfk_2` FOREIGN KEY (`question_id`) REFERENCES `question` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `answer`
--

LOCK TABLES `answer` WRITE;
/*!40000 ALTER TABLE `answer` DISABLE KEYS */;
INSERT INTO `answer` VALUES (1,'测试评论','2017-11-07 05:33:08',NULL,1),(2,'测试评论','2017-11-07 05:33:09',NULL,1),(3,'测试评论','2017-11-07 05:33:11',NULL,1),(4,'测试评论','2017-11-07 05:33:12',NULL,1),(5,'测试评论','2017-11-07 05:33:13',NULL,1),(6,'测试评论','2017-11-07 05:33:14',NULL,1),(7,'测试评论','2017-11-07 05:33:15',NULL,1),(8,'测试评论','2017-11-07 05:33:16',NULL,1),(9,'测试评论','2017-11-07 05:33:18',NULL,1),(10,'测试评论','2017-11-07 05:33:19',NULL,1),(11,'测试评论','2017-11-07 05:33:20',NULL,1),(12,'测试评论','2017-11-07 22:10:50',40,1),(13,'测试评论','2017-11-07 22:10:51',40,1),(14,'测试评论','2017-11-07 22:10:52',40,1),(15,'测试评论','2017-11-07 22:10:53',40,1),(16,'测试评论','2017-11-07 22:10:54',40,1),(17,'测试评论','2017-11-07 22:10:55',40,1),(18,'测试评论','2017-11-07 22:10:55',40,1),(19,'测试评论','2017-11-07 22:10:56',40,1),(20,'测试评论','2017-11-07 22:10:57',40,1),(21,'测试评论','2017-11-07 22:10:57',40,1),(22,'测试评论','2017-11-07 22:10:58',40,1),(23,'测试评论','2017-11-07 22:10:59',40,1),(24,'测试评论','2017-11-07 22:11:00',40,1),(25,'测试评论','2017-11-07 22:11:03',40,1),(26,'测试评论','2017-11-07 22:11:05',40,1);
/*!40000 ALTER TABLE `answer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question`
--

DROP TABLE IF EXISTS `question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `question` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `content` text NOT NULL,
  `create_time` datetime DEFAULT NULL,
  `author_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `author_id` (`author_id`),
  CONSTRAINT `question_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question`
--

LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (1,'LNMP环境搭建','<p><strong>镜像源切换</strong></p><p>先把YUM源切换成国内的镜像源<br /> 先备份一下原来的源镜像文件</p><p># cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</p><p>下载新的CentOS-Base.repo</p><p>#wget -O /etc/yum.repos.d/CentOS-Base.repo <a href=\"http://mirrors.aliyun.com/repo/Centos-7.repo\">http://mirrors.aliyun.com/repo/Centos-7.repo</a></p><p>如果没有安装wget的话可以使用#yum install wget安装完成之后，在执行CentOS-Base.repo的安装<br /> 对/etc/yum.repos.d/CentOS-Media.repo源文件配置文件，改为不生效</p><p>enable=0</p><p>YUM缓存生成</p><p>#yum clean all<br /> #yum makecache<br /> #yum update</p>','2017-10-20 16:34:51',1),(2,'centos7安装MySql（5.7）','<p>官网：<a href=\"http://dev.mysql.com/downloads/repo/yum/\">http://dev.mysql.com/downloads/repo/yum/</a></p><p>#rpm -Uvh <a href=\"http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\">http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</a></p><p>#yum -y install mysql-community-server</p><p>安装完成之后，就可以启动mysql了</p><p>#service mysqld start</p><p>查看MySql的启动状态</p><p>#service mysqld status</p><p>开机启动设置</p><p>#systemctl enable mysqld<br /> #systemctl daemon-reload</p><p>MySql安装完成之后会在LOG文件(/var/log/mysqld.log)中生成一个root的默认密码</p><p>#grep \'temporary password\' /var/log/mysqld.log</p><p>2017-05-23T14:51:45.705458Z 1 [Note] A temporary password is generated for root@localhost: d&amp;sqr7dcf7P_</p><p>登录MySql并修改root密码</p><p>#mysql -uroot -p<br /> mysql&gt;ALTER USER \'root\'@\'localhost\' IDENTIFIED BY \'mx560205\';</p><p>修改密码策略<br /> mysql&gt; set global validate_password_policy=<strong>0;</strong><strong>然后修改密码</strong></p><p>ALTER USER USER() IDENTIFIED BY \'mx560205\';</p><p>&nbsp;</p><p><span style=\"font-size: 14pt;\">如果需要远程登录，且登录失败：</span></p><p><strong>有两种原因</strong></p><ol><li>数据库没有授权</li><li>服务器防火墙没有开放3306端口</li></ol><p><strong>一、数据库没有授权</strong></p><p>对于mysql数据库没有授权，只需要用一条命令就可以了。</p><p>mysql&gt;GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'mx@560205\' WITH GRANT OPTION;</p><p>&nbsp;</p><p>&nbsp;</p><p>//远程连接数据库的时候需要输入用户名和密码</p><p>用户名：root</p><p>密码:mx@560205</p><p>指点ip:%代表所有Ip,此处也可以输入Ip来指定Ip</p><p>&nbsp;</p><p>输入后使修改生效还需要下面的语句</p><p>mysql&gt;FLUSH PRIVILEGES;</p><p>&nbsp;</p>','2017-10-20 16:39:02',1),(3,'FirewallD防火墙开放3306端口','<p><strong>1.FirewallD</strong><strong>防火墙开放3306端口</strong></p><p>&nbsp;firewall-cmd --zone=public --add-port=3306/tcp --permanent</p><p>命令含义：</p><p>--zone #作用域</p><p>--add-port=3306/tcp #添加端口，格式为：端口/通讯协议</p><p>--permanent&nbsp; #永久生效，没有此参数重启后失效</p><p>重启防火墙</p><p>systemctl restart firewalld.service</p><p><strong>2.iptables </strong><strong>开发3306端口</strong></p><p>/sbin/iptables -I INPUT -p tcp -dport 3306 -j ACCEPT</p><p>/etc/rc.d/init.d/iptables save</p>','2017-10-20 17:15:25',1),(4,'部署flask,uwgis,nginx','<p><strong><span style=\"font-size: 14pt;\">1 安装virtualenv: pip install virtualenv</span></strong></p>\r\n<p><span style=\"font-size: 12pt;\">创建虚拟环境，</span>项目根目录下virtualenv env创建虚拟环境，env为虚拟环境目录，可以随意取。然后激活虚拟环境：source env/bin/activate</p>\r\n<p><strong><span style=\"font-size: 14pt;\">2 安装python-devel,pip、uwsgi、flask及相关包:</span></strong></p>\r\n<p>yum install python-devel，如果不能安装python-devel，</p>\r\n<p><strong># yum provides \'*/applydeltarpm\'</strong></p>\r\n<p><strong># yum install deltarpm</strong></p>\r\n<p>Flask (0.12.2)<br /> Flask-Migrate (2.1.1)<br /> Flask-Script (2.0.6)<br /> Flask-SQLAlchemy (2.3.2)<br /> PyMySQL (0.7.11)<br /> setuptools (36.6.0)<br /> SQLAlchemy (1.1.14)<br /> uWSGI (2.0.15)</p>\r\n<p><span style=\"font-size: 14pt;\"><strong>3 上传项目目录到根目录</strong></span></p>\r\n<p>然后配置uwsgi，在项目根目录新建*.ini内容如下：</p>\r\n<p>[uwsgi] #</p>\r\n<p>socket = 127.0.0.1:8001 uwsgi 启动时所使用的地址与端口</p>\r\n<p>chdir = /home/www/flask_test/flask_test/ # 指向网站目录</p>\r\n<p>wsgi-file = /home/www/flask_test/flask_test/zlktqa.py # python 启动程序文件</p>\r\n<p>callable = app # python 程序内用以启动的 application 变量名</p>\r\n<p>processes = 4 # 处理器数</p>\r\n<p>threads = 2 # 线程数</p>\r\n<p>stats = 127.0.0.1:9191 #状态检测地址</p>\r\n<p>测试时可以把socket改成http-socket，就可以在浏览器访问进行测试。</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: 14pt;\"><strong>4 安装supervisor，yum install supervisor并配置:</strong></span></p>\r\n<p>Supervisor全局配置文件为 /etc/supervisor/supervisor.conf。然后/etc/supervisor.d/中可以新建ini配置文件，全局配置文件默认会调用该目录下的ini配置文件中的配置，如果有其他需求，可以在全局配置文件中配置。</p>\r\n<p>在/etc/supervisor.d/中新建*.ini文件，加入以下配置：</p>\r\n<p>[program:my_flask]</p>\r\n<p># 启动命令入口</p>\r\n<p>command=/home/www/my_flask/venv/bin/uwsgi /home/www/my_flask/config.ini</p>\r\n<p># 命令程序所在目录</p>\r\n<p>directory=/home/www/my_flask</p>\r\n<p>#运行命令的用户名</p>\r\n<p>user=root</p>\r\n<p>autostart=true</p>\r\n<p>autorestart=true</p>\r\n<p>#日志地址</p>\r\n<p>stdout_logfile=/home/www/my_flask/logs/uwsgi_supervisor.log</p>\r\n<p>然后重启supervisor：supervisorctl reload</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: 14pt;\"><strong>5 安装配置nginx:</strong></span></p>\r\n<p>安装 yum install nginx</p>\r\n<p>配置，主配置文件/etc/nginx/nginx.conf</p>\r\n<p>中http下有这样一条：</p>\r\n<p>include /etc/nginx/conf.d/*.conf</p>\r\n<p>说明在conf.d目录下可以新建*.conf文件，默认会加载到主配置文件。</p>\r\n<p>现在就在conf.d目录下新建flask_test.conf加入以下内容：</p>\r\n<p>&nbsp;&nbsp;&nbsp; server {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listen&nbsp; 80;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server_name XX.XX.XX; #公网地址</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; location / {</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uwsgi_params;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uwsgi_pass&nbsp;&nbsp; 127.0.0.1:8001;&nbsp; # 指向uwsgi 所应用的内部地址,所有请求将转发给uwsgi 处理</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uwsgi_param UWSGI_PYHOME /home/www/flask_test/env/bin/python; # 指向虚拟环境目&gt;录</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uwsgi_param UWSGI_CHDIR&nbsp; /home/www/flask_test/flask_test; # 指向网站根目录</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uwsgi_param UWSGI_SCRIPT zlktqa:app; # 指定启动程序</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>重启nginx：systemctl restart nginx.service</p>','2017-10-20 17:18:34',1),(7,'唐嫣','<div class=\"para\"><img src=\"https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1210472396,3607264541&amp;fm=58&amp;bpow=496&amp;bpoh=654\" /></div>\r\n<div class=\"para\">唐嫣，1983年12月6日出生于上海市，毕业于中央戏剧学院表演系本科班，中国内地影视女演员。</div>\r\n<div class=\"para\">2001年，参加第三届舒蕾世纪星选美比赛获得冠军<sup>[1]</sup><a class=\"sup-anchor\" name=\"ref_[1]_590814\"></a>&nbsp; 。2004年，因被导演<a href=\"https://baike.baidu.com/item/%E5%BC%A0%E8%89%BA%E8%B0%8B\" target=\"_blank\" rel=\"noopener\">张艺谋</a>选中成为&ldquo;奥运宝贝&rdquo;之一，参加雅典奥运会闭幕式&ldquo;中国8分钟&rdquo;而被观众熟知<sup>[2]</sup><a class=\"sup-anchor\" name=\"ref_[2]_590814\"></a>&nbsp; 。2009年，凭借古装仙侠剧《<a href=\"https://baike.baidu.com/item/%E4%BB%99%E5%89%91%E5%A5%87%E4%BE%A0%E4%BC%A0%E4%B8%89/5128963\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"5128963\">仙剑奇侠传三</a>》获得关注<sup>[3]</sup><a class=\"sup-anchor\" name=\"ref_[3]_590814\"></a>&nbsp; 。2011年1月22日，其主演的都市言情剧《<a href=\"https://baike.baidu.com/item/%E5%A4%8F%E5%AE%B6%E4%B8%89%E5%8D%83%E9%87%91\" target=\"_blank\" rel=\"noopener\">夏家三千金</a>》取得卫视年度收视冠军，而唐嫣亦凭借该剧获得国剧盛典年度网络最受欢迎内地女演员奖<sup>[4-5]</sup><a class=\"sup-anchor\" name=\"ref_[4-5]_590814\"></a>&nbsp; 。2012年，成立<a href=\"https://baike.baidu.com/item/%E5%94%90%E5%AB%A3%E5%B7%A5%E4%BD%9C%E5%AE%A4\" target=\"_blank\" rel=\"noopener\">唐嫣工作室</a><sup>[6]</sup><a class=\"sup-anchor\" name=\"ref_[6]_590814\"></a>&nbsp; 。2013年，因主演动作剧《<a href=\"https://baike.baidu.com/item/X%E5%A5%B3%E7%89%B9%E5%B7%A5\" target=\"_blank\" rel=\"noopener\">X女特工</a>》获得第13届华鼎奖中国近代革命题材电视剧最佳女演员及国剧盛典年度极具商业价值演员<sup>[7]</sup><a class=\"sup-anchor\" name=\"ref_[7]_590814\"></a>&nbsp; 。2014年，因主演古装剧《<a href=\"https://baike.baidu.com/item/%E9%87%91%E7%8E%89%E8%89%AF%E7%BC%98/9168\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"9168\">金玉良缘</a>》获得第5届中国大学生电视节最受欢迎女演员<sup>[8]</sup><a class=\"sup-anchor\" name=\"ref_[8]_590814\"></a>&nbsp; ；同年，她还凭借爱情电影《<a href=\"https://baike.baidu.com/item/%E9%9C%B2%E6%B0%B4%E7%BA%A2%E9%A2%9C/13236018\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"13236018\">露水红颜</a>》获得第3届国际华语电影节金骑士奖最佳女配角奖<sup>[9]</sup><a class=\"sup-anchor\" name=\"ref_[9]_590814\"></a>&nbsp; 。</div>\r\n<div class=\"para\">2015年初，由唐嫣主演的都市爱情剧《<a href=\"https://baike.baidu.com/item/%E4%BD%95%E4%BB%A5%E7%AC%99%E7%AE%AB%E9%BB%98/13878975\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"13878975\">何以笙箫默</a>》、民国爱情剧《<a href=\"https://baike.baidu.com/item/%E5%8D%83%E9%87%91%E5%A5%B3%E8%B4%BC/9717223\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"9717223\">千金女贼</a>》及民国偶像剧《<a href=\"https://baike.baidu.com/item/%E6%B4%BB%E8%89%B2%E7%94%9F%E9%A6%99/13133563\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"13133563\">活色生香</a>》三部戏分别在3家一线卫视陆续播出，收视率均位列全国同时段冠军和前三甲<sup>[10-11]</sup><a class=\"sup-anchor\" name=\"ref_[10-11]_590814\"></a>&nbsp; ；随后，她还凭借《何以笙箫默》获得第17届华鼎奖当代题材电视剧最佳女演员<sup>[12]</sup><a class=\"sup-anchor\" name=\"ref_[12]_590814\"></a>&nbsp; 。2016年，唐嫣担任第11届中国金鹰电视艺术节金鹰女神<sup>[13]</sup><a class=\"sup-anchor\" name=\"ref_[13]_590814\"></a>&nbsp; ；同年，她还凭借古装剧《<a href=\"https://baike.baidu.com/item/%E9%94%A6%E7%BB%A3%E6%9C%AA%E5%A4%AE/17043717\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"17043717\">锦绣未央</a>》获得获得第22届华鼎奖中国百强电视剧最佳女主角<sup>[14]</sup><a class=\"sup-anchor\" name=\"ref_[14]_590814\"></a>&nbsp; 。2017年，主演都市爱情剧《<a href=\"https://baike.baidu.com/item/%E6%97%B6%E9%97%B4%E9%83%BD%E7%9F%A5%E9%81%93/19960450\" target=\"_blank\" rel=\"noopener\" data-lemmaid=\"19960450\">时间都知道</a>》<sup>[15]</sup><a class=\"sup-anchor\" name=\"ref_[15]_590814\"></a>&nbsp; 。</div>','2017-10-22 09:14:32',1),(11,'Mysql复习','<h1>一、MySQL</h1>\r\n<h3><strong>1、概述</strong></h3>\r\n<p>什么是数据库 ？<br />　答：数据的仓库，和Excel表中的行和列是差不多的，只是有各种约束和不同数据类型的表格</p>\r\n<p>什么是 MySQL、Oracle、SQLite、Access、MS SQL Server等 ？<br />　答：他们均是一个软件，都有两个主要的功能：</p>\r\n<ul>\r\n<li>a. 将数据保存到文件或内存</li>\r\n<li>b. 接收特定的命令，然后对文件进行相应的操作<br /><br />PS：如果有了以上软件，无须自己再去创建文件和文件夹，而是直接传递 命令 给上述软件，让其来进行文件操作，他们统称为数据库管理系统（DBMS，Database Management System）</li>\r\n</ul>\r\n<p>什么是SQL ？<br />　答：上述提到MySQL等软件可以接受命令，并做出相应的操作，由于命令中可以包含删除文件、获取文件内容等众多操作，对于编写的命令就是是SQL语句。SQL语句是结构化语言（Structured Query Language）的缩写，SQL是一种专门用来与数据库通信的语言。</p>\r\n<h3><strong>2、下载安装</strong></h3>\r\n<p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下公司。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p>\r\n<p>想要使用MySQL来存储并操作数据，则需要做几件事情：<br />　　a. 安装MySQL服务端<br />　　b. 安装MySQL客户端<br />　　b. 【客户端】连接【服务端】<br />　　c. 【客户端】发送命令给【服务端MySQL】服务的接受命令并执行相应操作(增删改查等)</p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_337054\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">下载</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">http:</code><code class=\"python keyword\">/</code><code class=\"python keyword\">/</code><code class=\"python plain\">dev.mysql.com</code><code class=\"python keyword\">/</code><code class=\"python plain\">downloads</code><code class=\"python keyword\">/</code><code class=\"python plain\">mysql</code><code class=\"python keyword\">/</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">安装</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">windows:</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">点点点</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">Linux:</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">yum install mysql</code><code class=\"python keyword\">-</code><code class=\"python plain\">server</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">Mac:</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">点点点</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<h3><strong>3、数据库操作</strong></h3>\r\n<p>(1)、显示数据</p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_765176\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">SHOW DATABASES;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p>默认数据库：<br />　　mysql - 用户权限相关数据<br />　　test - 用于用户测试数据<br />　　information_schema - MySQL本身架构相关数据</p>\r\n<p>(2)、使用数据库</p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_897278\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">USE db_name;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p>(3)、显示所有表</p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_415475\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">SHOW TABLES;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p>(4)、用户授权</p>\r\n<p>用户管理：</p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_774188\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">创建用户</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">create user </code><code class=\"python string\">\'用户名\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code> <code class=\"python plain\">identified by </code><code class=\"python string\">\'密码\'</code><code class=\"python plain\">;</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">删除用户</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">drop user </code><code class=\"python string\">\'用户名\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code><code class=\"python plain\">;</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python plain\">修改用户</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">rename user </code><code class=\"python string\">\'用户名\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code><code class=\"python plain\">; to </code><code class=\"python string\">\'新用户名\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code><code class=\"python plain\">;;</code></div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python plain\">修改密码</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python functions\">set</code> <code class=\"python plain\">password </code><code class=\"python keyword\">for</code> <code class=\"python string\">\'用户名\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code> <code class=\"python keyword\">=</code> <code class=\"python plain\">Password(</code><code class=\"python string\">\'新密码\'</code><code class=\"python plain\">)</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python spaces\">&nbsp;</code>&nbsp;</div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python plain\">PS：用户权限相关数据保存在mysql数据库的user表中，所以也可以直接对其进行操作（不建议）</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p>授权管理：</p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_360497\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">show grants </code><code class=\"python keyword\">for</code> <code class=\"python string\">\'用户\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class=\"python keyword\">-</code><code class=\"python keyword\">-</code> <code class=\"python plain\">查看权限</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python plain\">grant&nbsp; 权限 on 数据库.表 to&nbsp;&nbsp; </code><code class=\"python string\">\'用户\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code> <code class=\"python plain\">identified by </code><code class=\"python string\">\'密码\'</code>&nbsp;&nbsp;&nbsp;&nbsp; <code class=\"python keyword\">-</code><code class=\"python keyword\">-</code> <code class=\"python plain\">授权并创建密码</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">revoke 权限 on 数据库.表 </code><code class=\"python keyword\">from</code> <code class=\"python string\">\'用户\'</code><code class=\"python plain\">@</code><code class=\"python string\">\'IP地址\'</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class=\"python keyword\">-</code><code class=\"python keyword\">-</code> <code class=\"python plain\">取消权限</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p>--&gt;有哪些权限：</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_5461d3fa-f7a4-46c2-b39d-cf4aab8f3a4b\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_5461d3fa-f7a4-46c2-b39d-cf4aab8f3a4b\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>all privileges  除grant外的所有权限\r\nselect          仅查权限\r\nselect,insert   查和插入权限\r\n...\r\nusage                   无访问权限\r\nalter                   使用alter table\r\nalter routine           使用alter procedure和drop procedure\r\ncreate                  使用create table\r\ncreate routine          使用create procedure\r\ncreate temporary tables 使用create temporary tables\r\ncreate user             使用create user、drop user、rename user和revoke  all privileges\r\ncreate view             使用create view\r\ndelete                  使用delete\r\ndrop                    使用drop table\r\nexecute                 使用call和存储过程\r\nfile                    使用select into outfile 和 load data infile\r\ngrant option            使用grant 和 revoke\r\nindex                   使用index\r\ninsert                  使用insert\r\nlock tables             使用lock table\r\nprocess                 使用show full processlist\r\nselect                  使用select\r\nshow databases          使用show databases\r\nshow view               使用show view\r\nupdate                  使用update\r\nreload                  使用flush\r\nshutdown                使用mysqladmin shutdown(关闭MySQL)\r\nsuper                   使用change master、kill、logs、purge、master和set global。还允许mysqladmin调试登陆\r\nreplication client      服务器位置的访问\r\nreplication slave       由复制从属使用</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>--&gt;数据库范围：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>对于目标数据库以及内部其他：\r\n    数据库名.*           数据库中的所有\r\n    数据库名.表          指定数据库中的某张表\r\n    数据库名.存储过程     指定数据库中的存储过程\r\n    *.*                所有数据库</pre>\r\n</div>\r\n<p>--&gt;用户范围：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>用户名@IP地址         用户只能在改IP下才能访问\r\n用户名@192.168.1.%   用户只能在改IP段下才能访问(通配符%表示任意)\r\n用户名@%             用户可以再任意IP下访问(默认IP地址为%)</pre>\r\n</div>\r\n<h3><strong>4、表操作</strong></h3>\r\n<p><strong>(1)、创建表</strong></p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_109070\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">create table 表名(</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">列名&nbsp; 类型&nbsp; 是否可以为空，</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">列名&nbsp; 类型&nbsp; 是否可以为空</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python plain\">)</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p>约束(1)是否可空null</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>是否可空，null表示空，非字符串\r\n    not null    - 不可空\r\n    null        - 可空</pre>\r\n</div>\r\n<p>约束(2)默认值default</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>默认值，创建列时可以指定默认值，当插入数据时如果未主动设置，则自动添加默认值\r\n    create table tb1(\r\n        nid int not null defalut 2,\r\n        num int not null\r\n    )</pre>\r\n</div>\r\n<p>约束(3)自增auto_increment</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>自增，如果为某列设置自增列，插入数据时无需设置此列，默认将自增（表中只能有一个自增列）\r\n    create table tb1(\r\n        nid int not null auto_increment primary key,\r\n        num int null\r\n    )\r\n    或\r\n    create table tb1(\r\n        nid int not null auto_increment,\r\n        num int null,\r\n        index(nid)\r\n    )\r\n    注意：1、对于自增列，必须是索引（含主键）。\r\n         2、对于自增可以设置步长和起始值\r\n             show session variables like \'auto_inc%\';\r\n             set session auto_increment_increment=2;\r\n             set session auto_increment_offset=10;\r\n\r\n             shwo global  variables like \'auto_inc%\';\r\n             set global auto_increment_increment=2;\r\n             set global auto_increment_offset=10;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>约束(4)主键primary key</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>主键，一种特殊的唯一索引，不允许有空值，如果主键使用单个列，则它的值必须唯一，如果是多列，则其组合必须唯一。\r\n    create table tb1(\r\n        nid int not null auto_increment primary key,\r\n        num int null\r\n    )\r\n    或\r\n    create table tb1(\r\n        nid int not null,\r\n        num int not null,\r\n        primary key(nid,num)\r\n    )</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>约束(5)唯一键unique key</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>    create table tb1(\r\n        nid int not null auto_increment primary key,\r\n        num int null unique key,\r\n    )</pre>\r\n</div>\r\n<p>约束(6)外键foreign key</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>外键，一个特殊的索引，只能是指定内容\r\n    creat table color(\r\n        nid int not null primary key,\r\n        name char(16) not null\r\n    )\r\n\r\n    create table fruit(\r\n        nid int not null primary key,\r\n        smt char(32) null ,\r\n        color_id int not null,\r\n        constraint fk_cc foreign key (color_id) references color(nid)\r\n    )</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p><strong>(2)、删除表</strong></p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_275764\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">drop table 表名</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p><strong>(3)、清空表</strong></p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_190130\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">delete </code><code class=\"python keyword\">from</code> <code class=\"python plain\">表名</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python plain\">truncate table 表名&nbsp; </code><code class=\"python comments\"># 和上面的区别在于，这条语句能够使自增id恢复到0</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p><strong>(4)、修改表</strong></p>\r\n<div class=\"cnblogs_Highlighter sh-gutter\">\r\n<div>\r\n<div id=\"highlighter_225006\" class=\"syntaxhighlighter  python\">\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tbody>\r\n<tr>\r\n<td class=\"gutter\">\r\n<div class=\"line number1 index0 alt2\">1</div>\r\n<div class=\"line number2 index1 alt1\">2</div>\r\n<div class=\"line number3 index2 alt2\">3</div>\r\n<div class=\"line number4 index3 alt1\">4</div>\r\n<div class=\"line number5 index4 alt2\">5</div>\r\n<div class=\"line number6 index5 alt1\">6</div>\r\n<div class=\"line number7 index6 alt2\">7</div>\r\n<div class=\"line number8 index7 alt1\">8</div>\r\n<div class=\"line number9 index8 alt2\">9</div>\r\n<div class=\"line number10 index9 alt1\">10</div>\r\n<div class=\"line number11 index10 alt2\">11</div>\r\n<div class=\"line number12 index11 alt1\">12</div>\r\n<div class=\"line number13 index12 alt2\">13</div>\r\n<div class=\"line number14 index13 alt1\">14</div>\r\n<div class=\"line number15 index14 alt2\">15</div>\r\n<div class=\"line number16 index15 alt1\">16</div>\r\n<div class=\"line number17 index16 alt2\">17</div>\r\n</td>\r\n<td class=\"code\">\r\n<div class=\"container\">\r\n<div class=\"line number1 index0 alt2\"><code class=\"python plain\">添加列：alter table 表名 add 列名 类型</code></div>\r\n<div class=\"line number2 index1 alt1\"><code class=\"python plain\">删除列：alter table 表名 drop column 列名</code></div>\r\n<div class=\"line number3 index2 alt2\"><code class=\"python plain\">修改列：</code></div>\r\n<div class=\"line number4 index3 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">alter table 表名 modify column 列名 类型;&nbsp; </code><code class=\"python keyword\">-</code><code class=\"python keyword\">-</code> <code class=\"python plain\">类型</code></div>\r\n<div class=\"line number5 index4 alt2\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">alter table 表名 change 原列名 新列名 类型; </code><code class=\"python keyword\">-</code><code class=\"python keyword\">-</code> <code class=\"python plain\">列名，类型</code></div>\r\n<div class=\"line number6 index5 alt1\"><code class=\"python spaces\">&nbsp;</code>&nbsp;</div>\r\n<div class=\"line number7 index6 alt2\"><code class=\"python plain\">添加主键：</code></div>\r\n<div class=\"line number8 index7 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">alter table 表名 add primary key(列名);</code></div>\r\n<div class=\"line number9 index8 alt2\"><code class=\"python plain\">删除主键：</code></div>\r\n<div class=\"line number10 index9 alt1\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">alter table 表名 drop primary key;</code></div>\r\n<div class=\"line number11 index10 alt2\"><code class=\"python spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class=\"python plain\">alter table 表名&nbsp; modify&nbsp; 列名 </code><code class=\"python functions\">int</code><code class=\"python plain\">, drop primary key;</code></div>\r\n<div class=\"line number12 index11 alt1\"><code class=\"python spaces\">&nbsp;</code>&nbsp;</div>\r\n<div class=\"line number13 index12 alt2\"><code class=\"python plain\">添加外键：alter table 从表 add constraint 外键名称（形如：FK_从表_主表） foreign key 从表(外键字段) references 主表(主键字段);</code></div>\r\n<div class=\"line number14 index13 alt1\"><code class=\"python plain\">删除外键：alter table 表名 drop foreign key 外键名称</code></div>\r\n<div class=\"line number15 index14 alt2\"><code class=\"python spaces\">&nbsp;</code>&nbsp;</div>\r\n<div class=\"line number16 index15 alt1\"><code class=\"python plain\">修改默认值：ALTER TABLE testalter_tbl ALTER i </code><code class=\"python functions\">SET</code> <code class=\"python plain\">DEFAULT </code><code class=\"python value\">1000</code><code class=\"python plain\">;</code></div>\r\n<div class=\"line number17 index16 alt2\"><code class=\"python plain\">删除默认值：ALTER TABLE testalter_tbl ALTER i DROP DEFAULT;</code></div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n</div>\r\n<p><strong>(5)、基本数据类型</strong></p>\r\n<p>MySQL的数据类型大致分为：数值、时间和字符串</p>\r\n<p>http://www.runoob.com/mysql/mysql-data-types.html</p>\r\n<h3><strong>五、基本操作</strong></h3>\r\n<p>1、增加数据</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>insert into 表 (列名,列名...) values (值,值,值...)\r\ninsert into 表 (列名,列名...) values (值,值,值...),(值,值,值...)\r\ninsert into 表 (列名,列名...) select (列名,列名...) from 表</pre>\r\n</div>\r\n<p>2、删除数据</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>delete from 表\r\ndelete from 表 where id＝1 and name＝\'alex\'</pre>\r\n</div>\r\n<p>3、修改数据</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>update 表 set name ＝ \'alex\' where id&gt;1</pre>\r\n</div>\r\n<p>4、查询数据</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>select * from 表\r\nselect * from 表 where id &gt; 1\r\nselect nid,name,gender as gg from 表 where id &gt; 1</pre>\r\n</div>\r\n<p>5、其他</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_dadc06e3-c360-418e-9943-0c3ca140e1ec\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_dadc06e3-c360-418e-9943-0c3ca140e1ec\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>1、条件\r\n    select * from 表 where id &gt; 1 and name != \'alex\' and num = 12;\r\n\r\n    select * from 表 where id between 5 and 16;\r\n\r\n    select * from 表 where id in (11,22,33)\r\n    select * from 表 where id not in (11,22,33)\r\n    select * from 表 where id in (select nid from 表)\r\n\r\n2、通配符\r\n    select * from 表 where name like \'ale%\'  - ale开头的所有（多个字符串）\r\n    select * from 表 where name like \'ale_\'  - ale开头的所有（一个字符）\r\n\r\n3、限制\r\n    select * from 表 limit 5;            - 前5行\r\n    select * from 表 limit 4,5;          - 从第4行开始的5行\r\n    select * from 表 limit 5 offset 4    - 从第4行开始的5行\r\n\r\n4、排序\r\n    select * from 表 order by 列 asc              - 根据 &ldquo;列&rdquo; 从小到大排列\r\n    select * from 表 order by 列 desc             - 根据 &ldquo;列&rdquo; 从大到小排列\r\n    select * from 表 order by 列1 desc,列2 asc    - 根据 &ldquo;列1&rdquo; 从大到小排列，如果相同则按列2从小到大排序\r\n\r\n5、分组\r\n    select num from 表 group by num\r\n    select num,nid from 表 group by num,nid\r\n    select num,nid from 表  where nid &gt; 10 group by num,nid order nid desc\r\n    select num,nid,count(*),sum(score),max(score),min(score) from 表 group by num,nid\r\n\r\n    select num from 表 group by num having max(id) &gt; 10\r\n\r\n    特别的：group by 必须在where之后，order by之前\r\n\r\n6、连表\r\n    无对应关系则不显示\r\n    select A.num, A.name, B.name\r\n    from A,B\r\n    Where A.nid = B.nid\r\n\r\n    无对应关系则不显示\r\n    select A.num, A.name, B.name\r\n    from A inner join B\r\n    on A.nid = B.nid\r\n\r\n    A表所有显示，如果B中无对应关系，则值为null\r\n    select A.num, A.name, B.name\r\n    from A left join B\r\n    on A.nid = B.nid\r\n\r\n    B表所有显示，如果B中无对应关系，则值为null\r\n    select A.num, A.name, B.name\r\n    from A right join B\r\n    on A.nid = B.nid\r\n\r\n7、组合\r\n    组合，自动处理重合\r\n    select nickname\r\n    from A\r\n    union\r\n    select name\r\n    from B\r\n\r\n    组合，不处理重合\r\n    select nickname\r\n    from A\r\n    union all\r\n    select name\r\n    from B</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p><a href=\"http://www.cnblogs.com/xiaozhiqi/articles/5809229.html\" target=\"_blank\" rel=\"noopener\">一些总结和练习</a></p>\r\n<h3>六、视图</h3>\r\n<p>　　视图是一个虚拟表（非真实存在），其本质是【根据SQL语句获取动态的数据集，并为其命名】，用户使用时只需使用【名称】即可获取结果集，并可以将其当作表来使用。</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_a88ee4e5-3526-4b8e-b394-63174d771736\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_a88ee4e5-3526-4b8e-b394-63174d771736\" class=\"cnblogs_code_hide\">\r\n<pre>SELECT * FROM\r\n    (SELECT nid,NAME FROM tb1 WHERE nid &gt; 2) AS A\r\nWHERE A.NAME &gt; \'redhat\';</pre>\r\n</div>\r\n</div>\r\n<p>1、创建视图</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_7cae829d-b28f-4bb4-99ea-fe503020cf57\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_7cae829d-b28f-4bb4-99ea-fe503020cf57\" class=\"cnblogs_code_hide\">\r\n<pre>--格式：CREATE VIEW 视图名称 AS  SQL语句\r\nCREATE VIEW v1 AS \r\nSELECT nid,name FROM A WHERE nid &gt; 4;</pre>\r\n</div>\r\n</div>\r\n<p>2、删除视图</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_1d43137c-2e4b-4f8a-9044-9883a47672e3\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_1d43137c-2e4b-4f8a-9044-9883a47672e3\" class=\"cnblogs_code_hide\">\r\n<pre>--格式：DROP VIEW 视图名称\r\n\r\nDROP VIEW v1</pre>\r\n</div>\r\n</div>\r\n<p>3、修改视图</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_1df01b49-e3d0-4b1d-8e60-d0ec8419edfc\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_1df01b49-e3d0-4b1d-8e60-d0ec8419edfc\" class=\"cnblogs_code_hide\">\r\n<pre>-- 格式：ALTER VIEW 视图名称 AS SQL语句\r\n\r\nALTER VIEW v1 AS\r\nSELECT A.nid,B.NAME\r\nFROM A LEFT JOIN B ON A.id = B.nid LEFT JOIN C ON A.id = C.nid\r\nWHERE A.id &gt; 2 AND C.nid &lt; 5;</pre>\r\n</div>\r\n</div>\r\n<p>4、使用视图</p>\r\n<p>使用视图时，将其当作表进行操作即可，由于视图是虚拟表，所以无法使用其对真实表进行创建、更新和删除操作，仅能做查询用。</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_a38af78c-e3da-4c1d-b40d-b28187d5fade\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_a38af78c-e3da-4c1d-b40d-b28187d5fade\" class=\"cnblogs_code_hide\">\r\n<pre>select * from v1</pre>\r\n</div>\r\n</div>\r\n<h3>七、触发器</h3>\r\n<p>　　对某个表进行【增/删/改】操作的前后如果希望触发某个特定的行为时，可以使用触发器，触发器用于定制用户对表的行进行【增/删/改】前后的行为。</p>\r\n<p>1、创建基本语法</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_b779d82c-b4f2-4671-a5d5-6c20860dbc47\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_b779d82c-b4f2-4671-a5d5-6c20860dbc47\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre># 插入前\r\nCREATE TRIGGER tri_before_insert_tb1 BEFORE INSERT ON tb1 FOR EACH ROW\r\nBEGIN\r\n    ...\r\nEND\r\n\r\n# 插入后\r\nCREATE TRIGGER tri_after_insert_tb1 AFTER INSERT ON tb1 FOR EACH ROW\r\nBEGIN\r\n    ...\r\nEND\r\n\r\n# 删除前\r\nCREATE TRIGGER tri_before_delete_tb1 BEFORE DELETE ON tb1 FOR EACH ROW\r\nBEGIN\r\n    ...\r\nEND\r\n\r\n# 删除后\r\nCREATE TRIGGER tri_after_delete_tb1 AFTER DELETE ON tb1 FOR EACH ROW\r\nBEGIN\r\n    ...\r\nEND\r\n\r\n# 更新前\r\nCREATE TRIGGER tri_before_update_tb1 BEFORE UPDATE ON tb1 FOR EACH ROW\r\nBEGIN\r\n    ...\r\nEND\r\n\r\n# 更新后\r\nCREATE TRIGGER tri_after_update_tb1 AFTER UPDATE ON tb1 FOR EACH ROW\r\nBEGIN\r\n    ...\r\nEND</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_be39eb64-d795-45b8-bda2-d728e2892c21\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_be39eb64-d795-45b8-bda2-d728e2892c21\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter //\r\nCREATE TRIGGER tri_before_insert_tb1 BEFORE INSERT ON tb1 FOR EACH ROW\r\nBEGIN\r\n\r\nIF NEW. NAME == \'redhat\' THEN\r\n    INSERT INTO tb2 (NAME)\r\nVALUES\r\n    (\'aa\')\r\nEND\r\nEND//\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_24f32cbc-af6a-4554-8e97-2026e5e466ed\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_24f32cbc-af6a-4554-8e97-2026e5e466ed\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter //\r\nCREATE TRIGGER tri_after_insert_tb1 AFTER INSERT ON tb1 FOR EACH ROW\r\nBEGIN\r\n    IF NEW. num = 666 THEN\r\n        INSERT INTO tb2 (NAME)\r\n        VALUES\r\n            (\'666\'),\r\n            (\'666\') ;\r\n    ELSEIF NEW. num = 555 THEN\r\n        INSERT INTO tb2 (NAME)\r\n        VALUES\r\n            (\'555\'),\r\n            (\'555\') ;\r\n    END IF;\r\nEND//\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>特别的：NEW表示即将插入的数据行，OLD表示即将删除的数据行。</p>\r\n<p>2、删除触发器</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>DROP TRIGGER tri_after_insert_tb1;</pre>\r\n</div>\r\n<p>3、使用触发器</p>\r\n<p>触发器无法由用户直接调用，而知由于对表的【增/删/改】操作被动引发的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>insert into tb1(num) values(666)</pre>\r\n</div>\r\n<h3>八、存储过程</h3>\r\n<p>存储过程是一个SQL语句集合，当主动去调用存储过程时，其中内部的SQL语句会按照逻辑执行。</p>\r\n<p>1、创建存储过程和执行过程</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_6c009dc4-77fd-4fa3-9c87-676030ae597f\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_6c009dc4-77fd-4fa3-9c87-676030ae597f\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>-- 创建存储过程\r\n\r\ndelimiter //\r\ncreate procedure p1()\r\nBEGIN\r\n    select * from t1;\r\nEND//\r\ndelimiter ;\r\n\r\n\r\n\r\n-- 执行存储过程\r\n\r\ncall p1()</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>对于存储过程，可以接收参数，其参数有三类：</p>\r\n<ul>\r\n<li>in &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;仅用于传入参数用</li>\r\n<li>out &nbsp; &nbsp; &nbsp; &nbsp;仅用于返回值用</li>\r\n<li>inout &nbsp; &nbsp; 既可以传入又可以当作返回值</li>\r\n</ul>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_f874949f-e7f4-4104-af35-4a6fafea8f37\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_f874949f-e7f4-4104-af35-4a6fafea8f37\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>-- 创建存储过程\r\ndelimiter \\\\\r\ncreate procedure p1(\r\n    in i1 int,\r\n    in i2 int,\r\n    inout i3 int,\r\n    out r1 int\r\n)\r\nBEGIN\r\n    DECLARE temp1 int;\r\n    DECLARE temp2 int default 0;\r\n    \r\n    set temp1 = 1;\r\n\r\n    set r1 = i1 + i2 + temp1 + temp2;\r\n    \r\n    set i3 = i3 + 100;\r\n\r\nend\\\\\r\ndelimiter ;\r\n\r\n-- 执行存储过程\r\nDECLARE @t1 INT default 3;\r\nDECLARE @t2 INT;\r\nCALL p1 (1, 2 ,@t1, @t2);\r\nSELECT @t1,@t2;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>2、删除存储过程</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>drop procedure proc_name;</pre>\r\n</div>\r\n<p>3、执行存储过程</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>-- 无参数\r\ncall proc_name()\r\n\r\n-- 有参数，全in\r\ncall proc_name(1,2)\r\n\r\n-- 有参数，有in，out，inout\r\nDECLARE @t1 INT;\r\nDECLARE @t2 INT default 3;\r\ncall proc_name(1,2,@t1,@t2)</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_5f8918ac-52ab-4943-b82b-e89967790d93\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_5f8918ac-52ab-4943-b82b-e89967790d93\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>#!/usr/bin/env python\r\n# -*- coding:utf-8 -*-\r\nimport pymysql\r\n\r\nconn = pymysql.connect(host=\'127.0.0.1\', port=3306, user=\'root\', passwd=\'123\', db=\'t1\')\r\ncursor = conn.cursor(cursor=pymysql.cursors.DictCursor)\r\n\r\n# 执行存储过程\r\ncursor.callproc(\'p1\', args=(1, 22, 3, 4))\r\n\r\n# 获取执行完存储的参数\r\ncursor.execute(\"select @_p1_0,@_p1_1,@_p1_2,@_p1_3\")\r\nresult = cursor.fetchall()\r\n\r\nconn.commit()\r\ncursor.close()\r\nconn.close()\r\n\r\n\r\nprint(result)</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<h3>九、函数</h3>\r\n<p>MySQL中提供了许多内置函数，例如：</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_1842f998-57bb-4cca-aaad-500041a9cc46\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_1842f998-57bb-4cca-aaad-500041a9cc46\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>CHAR_LENGTH(str)\r\n    返回值为字符串str 的长度，长度的单位为字符。一个多字节字符算作一个单字符。\r\n    对于一个包含五个二字节字符集, LENGTH()返回值为 10, 而CHAR_LENGTH()的返回值为5。\r\n\r\nCONCAT(str1,str2,...)\r\n    字符串拼接\r\n    如有任何一个参数为NULL ，则返回值为 NULL。\r\nCONCAT_WS(separator,str1,str2,...)\r\n    字符串拼接（自定义连接符）\r\n    CONCAT_WS()不会忽略任何空字符串。 (然而会忽略所有的 NULL）。\r\n\r\nCONV(N,from_base,to_base)\r\n    进制转换\r\n    例如：\r\n        SELECT CONV(\'a\',16,2); 表示将 a 由16进制转换为2进制字符串表示\r\n\r\nFORMAT(X,D)\r\n    将数字X 的格式写为\'#,###,###.##\',以四舍五入的方式保留小数点后 D 位， 并将结果以字符串的形式返回。若  D 为 0, 则返回结果不带有小数点，或不含小数部分。\r\n    例如：\r\n        SELECT FORMAT(12332.1,4); 结果为： \'12,332.1000\'\r\nINSERT(str,pos,len,newstr)\r\n    在str的指定位置插入字符串\r\n        pos：要替换位置其实位置\r\n        len：替换的长度\r\n        newstr：新字符串\r\n    特别的：\r\n        如果pos超过原字符串长度，则返回原字符串\r\n        如果len超过原字符串长度，则由新字符串完全替换\r\nINSTR(str,substr)\r\n    返回字符串 str 中子字符串的第一个出现位置。\r\n\r\nLEFT(str,len)\r\n    返回字符串str 从开始的len位置的子序列字符。\r\n\r\nLOWER(str)\r\n    变小写\r\n\r\nUPPER(str)\r\n    变大写\r\n\r\nLTRIM(str)\r\n    返回字符串 str ，其引导空格字符被删除。\r\nRTRIM(str)\r\n    返回字符串 str ，结尾空格字符被删去。\r\nSUBSTRING(str,pos,len)\r\n    获取字符串子序列\r\n\r\nLOCATE(substr,str,pos)\r\n    获取子序列索引位置\r\n\r\nREPEAT(str,count)\r\n    返回一个由重复的字符串str 组成的字符串，字符串str的数目等于count 。\r\n    若 count &lt;= 0,则返回一个空字符串。\r\n    若str 或 count 为 NULL，则返回 NULL 。\r\nREPLACE(str,from_str,to_str)\r\n    返回字符串str 以及所有被字符串to_str替代的字符串from_str 。\r\nREVERSE(str)\r\n    返回字符串 str ，顺序和字符顺序相反。\r\nRIGHT(str,len)\r\n    从字符串str 开始，返回从后边开始len个字符组成的子序列\r\n\r\nSPACE(N)\r\n    返回一个由N空格组成的字符串。\r\n\r\nSUBSTRING(str,pos) , SUBSTRING(str FROM pos) SUBSTRING(str,pos,len) , SUBSTRING(str FROM pos FOR len)\r\n    不带有len 参数的格式从字符串str返回一个子字符串，起始于位置 pos。带有len参数的格式从字符串str返回一个长度同len字符相同的子字符串，起始于位置 pos。 使用 FROM的格式为标准 SQL 语法。也可能对pos使用一个负值。假若这样，则子字符串的位置起始于字符串结尾的pos 字符，而不是字符串的开头位置。在以下格式的函数中可以对pos 使用一个负值。\r\n\r\n    mysql&gt; SELECT SUBSTRING(\'Quadratically\',5);\r\n        -&gt; \'ratically\'\r\n\r\n    mysql&gt; SELECT SUBSTRING(\'foobarbar\' FROM 4);\r\n        -&gt; \'barbar\'\r\n\r\n    mysql&gt; SELECT SUBSTRING(\'Quadratically\',5,6);\r\n        -&gt; \'ratica\'\r\n\r\n    mysql&gt; SELECT SUBSTRING(\'Sakila\', -3);\r\n        -&gt; \'ila\'\r\n\r\n    mysql&gt; SELECT SUBSTRING(\'Sakila\', -5, 3);\r\n        -&gt; \'aki\'\r\n\r\n    mysql&gt; SELECT SUBSTRING(\'Sakila\' FROM -4 FOR 2);\r\n        -&gt; \'ki\'\r\n\r\nTRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str) TRIM(remstr FROM] str)\r\n    返回字符串 str ， 其中所有remstr 前缀和/或后缀都已被删除。若分类符BOTH、LEADIN或TRAILING中没有一个是给定的,则假设为BOTH 。 remstr 为可选项，在未指定情况下，可删除空格。\r\n\r\n    mysql&gt; SELECT TRIM(\'  bar   \');\r\n            -&gt; \'bar\'\r\n\r\n    mysql&gt; SELECT TRIM(LEADING \'x\' FROM \'xxxbarxxx\');\r\n            -&gt; \'barxxx\'\r\n\r\n    mysql&gt; SELECT TRIM(BOTH \'x\' FROM \'xxxbarxxx\');\r\n            -&gt; \'bar\'\r\n\r\n    mysql&gt; SELECT TRIM(TRAILING \'xyz\' FROM \'barxxyz\');\r\n            -&gt; \'barx\'</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>更多：</p>\r\n<p>http://doc.mysql.cn/mysql5/refman-5.1-zh.html-chapter/functions.html#encryption-functions</p>\r\n<p>http://dev.mysql.com/doc/refman/5.7/en/string-functions.html</p>\r\n<p>1、自定义函数</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_e470a7ac-38b0-410e-9532-0898a5ff6abf\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_e470a7ac-38b0-410e-9532-0898a5ff6abf\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter \\\\\r\ncreate function f1(\r\n    i1 int,\r\n    i2 int)\r\nreturns int\r\nBEGIN\r\n    declare num int;\r\n    set num = i1 + i2;\r\n    return(num);\r\nEND \\\\\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>2、删除函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>drop function func_name;</pre>\r\n</div>\r\n<p>3、执行函数</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_b262fa0a-98ae-450d-9e4c-d0f19473f6b1\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_b262fa0a-98ae-450d-9e4c-d0f19473f6b1\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre># 获取返回值\r\ndeclare @i VARCHAR(32);\r\nselect UPPER(\'alex\') into @i;\r\nSELECT @i;\r\n\r\n\r\n# 在查询中使用\r\nselect f1(11,nid) ,name from tb2;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<h3>十、索引</h3>\r\n<p>事务用于将某些操作的多个SQL作为原子性操作，一旦有某一个出现错误，即可回滚到原来的状态，从而保证数据库数据完整性。</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_f6a69448-3907-4d93-8e50-9b69a79c33d9\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_f6a69448-3907-4d93-8e50-9b69a79c33d9\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter \\\\\r\ncreate PROCEDURE p1(\r\n    OUT p_return_code tinyint\r\n)\r\nBEGIN \r\n  DECLARE exit handler for sqlexception \r\n  BEGIN \r\n    -- ERROR \r\n    set p_return_code = 1; \r\n    rollback; \r\n  END; \r\n \r\n  DECLARE exit handler for sqlwarning \r\n  BEGIN \r\n    -- WARNING \r\n    set p_return_code = 2; \r\n    rollback; \r\n  END; \r\n \r\n  START TRANSACTION; \r\n    DELETE from tb1;\r\n    insert into tb2(name)values(\'seven\');\r\n  COMMIT; \r\n \r\n  -- SUCCESS \r\n  set p_return_code = 0; \r\n \r\n  END\\\\\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_9ab5bf34-7399-4702-a400-14da119b36b6\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_9ab5bf34-7399-4702-a400-14da119b36b6\" class=\"cnblogs_code_hide\">\r\n<pre>DECLARE @i TINYINT;\r\ncall p1(@i);\r\nselect @i;</pre>\r\n</div>\r\n</div>\r\n<h3>十一、索引</h3>\r\n<p>索引，是数据库中专门用于帮助用户快速查询数据的一种数据结构。类似于字典中的目录，查找字典内容时可以根据目录查找到数据的存放位置，然后直接获取即可。</p>\r\n<p>MySQL中常见索引有：</p>\r\n<ul>\r\n<li>普通索引</li>\r\n<li>唯一索引</li>\r\n<li>主键索引</li>\r\n<li>组合索引</li>\r\n</ul>\r\n<p>1、普通索引</p>\r\n<p>普通索引仅有一个功能：加速查询</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_d7805699-9657-4620-81b1-28ee0027f361\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_d7805699-9657-4620-81b1-28ee0027f361\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>create table in1(\r\n    nid int not null auto_increment primary key,\r\n    name varchar(32) not null,\r\n    email varchar(64) not null,\r\n    extra text,\r\n    index ix_name (name)\r\n)</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_fe39b36a-7c61-4344-9135-2c47b435ad12\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_fe39b36a-7c61-4344-9135-2c47b435ad12\" class=\"cnblogs_code_hide\">\r\n<pre>create index index_name on table_name(column_name)</pre>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_19a84480-cf88-490b-aed2-f24f315b1545\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_19a84480-cf88-490b-aed2-f24f315b1545\" class=\"cnblogs_code_hide\">\r\n<pre>drop index_name on table_name;</pre>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_cc2e9280-1007-4fed-8eae-79167e57d77d\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_cc2e9280-1007-4fed-8eae-79167e57d77d\" class=\"cnblogs_code_hide\">\r\n<pre>show index from table_name;</pre>\r\n</div>\r\n</div>\r\n<p>注意：对于创建索引时如果是BLOB&nbsp;和&nbsp;TEXT&nbsp;类型，必须指定length。</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_cc28a46f-ce3c-4475-804a-153629233a26\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_cc28a46f-ce3c-4475-804a-153629233a26\" class=\"cnblogs_code_hide\">\r\n<pre>create index ix_extra on in1(extra(32));</pre>\r\n</div>\r\n</div>\r\n<p>2、唯一索引</p>\r\n<p>唯一索引有两个功能：加速查询 和 唯一约束（可含null）</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_db2da684-190e-442d-9a5c-9498013ea4f9\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_db2da684-190e-442d-9a5c-9498013ea4f9\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>create table in1(\r\n    nid int not null auto_increment primary key,\r\n    name varchar(32) not null,\r\n    email varchar(64) not null,\r\n    extra text,\r\n    unique ix_name (name)\r\n)</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_eabd6711-9827-4a32-8561-4dc2fd60179c\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_eabd6711-9827-4a32-8561-4dc2fd60179c\" class=\"cnblogs_code_hide\">\r\n<pre>create unique index 索引名 on 表名(列名)</pre>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_30cd2511-20b8-403b-81e4-e375055b2c6f\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_30cd2511-20b8-403b-81e4-e375055b2c6f\" class=\"cnblogs_code_hide\">\r\n<pre>drop unique index 索引名 on 表名</pre>\r\n</div>\r\n</div>\r\n<p>3、主键索引</p>\r\n<p>主键有两个功能：加速查询 和 唯一约束（不可含null）</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_64f37707-42f4-4af0-b5b7-cbc6aadc9499\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_64f37707-42f4-4af0-b5b7-cbc6aadc9499\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>create table in1(\r\n    nid int not null auto_increment primary key,\r\n    name varchar(32) not null,\r\n    email varchar(64) not null,\r\n    extra text,\r\n    index ix_name (name)\r\n)\r\n\r\nOR\r\n\r\ncreate table in1(\r\n    nid int not null auto_increment,\r\n    name varchar(32) not null,\r\n    email varchar(64) not null,\r\n    extra text,\r\n    primary key(ni1),\r\n    index ix_name (name)\r\n)</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_9e145010-1568-400d-8be3-40ae9e713584\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_9e145010-1568-400d-8be3-40ae9e713584\" class=\"cnblogs_code_hide\">\r\n<pre>alter table 表名 add primary key(列名);</pre>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_4600da80-c5ab-4a86-be35-aa905d8157f2\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_4600da80-c5ab-4a86-be35-aa905d8157f2\" class=\"cnblogs_code_hide\">\r\n<pre>alter table 表名 drop primary key;\r\nalter table 表名  modify  列名 int, drop primary key;</pre>\r\n</div>\r\n</div>\r\n<p>4、组合索引</p>\r\n<p>组合索引是将n个列组合成一个索引</p>\r\n<p>其应用场景为：频繁的同时使用n列来进行查询，如：where n1 = \'redhat\' and n2 = 666。</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_eca1bd81-d2ef-4dca-9f98-1eada01d4757\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_eca1bd81-d2ef-4dca-9f98-1eada01d4757\" class=\"cnblogs_code_hide\">\r\n<pre>create table in3(\r\n    nid int not null auto_increment primary key,\r\n    name varchar(32) not null,\r\n    email varchar(64) not null,\r\n    extra text\r\n)</pre>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_756f6cdc-8a0d-4ed4-8ea4-62bc8c702c0b\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_756f6cdc-8a0d-4ed4-8ea4-62bc8c702c0b\" class=\"cnblogs_code_hide\">\r\n<pre>create index ix_name_email on in3(name,email);</pre>\r\n</div>\r\n</div>\r\n<p>如上创建组合索引之后，查询：</p>\r\n<ul>\r\n<li>name and email &nbsp;-- 使用索引</li>\r\n<li>name &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -- 使用索引</li>\r\n<li>email &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -- 不使用索引</li>\r\n</ul>\r\n<p>注意：对于同时搜索n个条件时，组合索引的性能好于多个单一索引合并。</p>\r\n<h3>其他</h3>\r\n<p>1、条件语句</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_2f242ee0-f5ca-46a8-b2ff-de73a173feb5\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_2f242ee0-f5ca-46a8-b2ff-de73a173feb5\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter \\\\\r\nCREATE PROCEDURE proc_if ()\r\nBEGIN\r\n    \r\n    declare i int default 0;\r\n    if i = 1 THEN\r\n        SELECT 1;\r\n    ELSEIF i = 2 THEN\r\n        SELECT 2;\r\n    ELSE\r\n        SELECT 7;\r\n    END IF;\r\n\r\nEND\\\\\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<p>2、循环语句</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_8c8a3b3f-e68e-4372-8001-f3115a05476c\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_8c8a3b3f-e68e-4372-8001-f3115a05476c\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter \\\\\r\nCREATE PROCEDURE proc_while ()\r\nBEGIN\r\n\r\n    DECLARE num INT ;\r\n    SET num = 0 ;\r\n    WHILE num &lt; 10 DO\r\n        SELECT\r\n            num ;\r\n        SET num = num + 1 ;\r\n    END WHILE ;\r\n\r\nEND\\\\\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_3b33db30-717e-4cc1-81d8-7ff0915f1737\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_3b33db30-717e-4cc1-81d8-7ff0915f1737\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter \\\\\r\nCREATE PROCEDURE proc_repeat ()\r\nBEGIN\r\n\r\n    DECLARE i INT ;\r\n    SET i = 0 ;\r\n    repeat\r\n        select i;\r\n        set i = i + 1;\r\n        until i &gt;= 5\r\n    end repeat;\r\n\r\nEND\\\\\r\ndelimiter ;</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n</div>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_closed_eb4c1161-607f-4328-8f6d-46d581aafe07\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /> <span class=\"cnblogs_code_collapse\">loop循环</span></div>\r\n<p>3、动态执行SQL语句</p>\r\n<div class=\"cnblogs_code\"><img id=\"code_img_opened_81161c62-5a47-4e63-8edc-2e6c03929e5e\" class=\"code_img_opened\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\r\n<div id=\"cnblogs_code_open_81161c62-5a47-4e63-8edc-2e6c03929e5e\" class=\"cnblogs_code_hide\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>delimiter \\\\\r\nDROP PROCEDURE IF EXISTS proc_sql \\\\\r\nCREATE PROCEDURE proc_sql ()\r\nBEGIN\r\n    declare p1 int;\r\n    set p1 = 11;\r\n    set @p1 = p1;\r\n\r\n    PREPARE prod FROM \'select * from tb2 where nid &gt; ?\';\r\n    EXECUTE prod USING @p1;\r\n    DEALLOCATE prepare prod; \r\n\r\nEND\\\\\r\ndelimiter ;</pre>\r\n</div>\r\n</div>','2017-10-28 04:55:23',1),(16,'mysql5.7设置密码','<p>为了加强安全性，MySQL5.7为root用户随机生成了一个密码，在error log中，关于error log的位置，如果安装的是RPM包，则默认是/var/log/mysqld.log。</p>\r\n<p>一般可通过log_error设置</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; select @@log_error;\r\n+---------------------+\r\n| @@log_error         |\r\n+---------------------+\r\n| /var/log/mysqld.log |\r\n+---------------------+\r\n1 row in set (0.00 sec)</pre>\r\n</div>\r\n<p>可通过# grep \"password\" /var/log/mysqld.log 命令获取MySQL的临时密码</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>2016-01-19T05:16:36.218234Z 1 [Note] A temporary password is generated for root@localhost: waQ,qR%be2(5</pre>\r\n</div>\r\n<p>用该密码登录到服务端后，必须马上修改密码，不然会报如下错误：</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; select user();\r\nERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</pre>\r\n</div>\r\n<p>如果只是修改为一个简单的密码，会报以下错误：</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt;  ALTER USER USER() IDENTIFIED BY \'12345678\';\r\nERROR 1819 (HY000): Your password does not satisfy the current policy requirements</pre>\r\n</div>\r\n<p>这个其实与validate_password_policy的值有关。</p>\r\n<p>validate_password_policy有以下取值：</p>\r\n<table border=\"1\" summary=\"This table lists the password policies enforced\r\n                by the validate_password plugin and\r\n                describes the tests performed for each policy.\">\r\n<thead>\r\n<tr>\r\n<th scope=\"col\">Policy</th>\r\n<th scope=\"col\">Tests Performed</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td scope=\"row\"><code class=\"literal\">0</code>&nbsp;or&nbsp;<code class=\"literal\">LOW</code></td>\r\n<td>Length</td>\r\n</tr>\r\n<tr>\r\n<td scope=\"row\"><code class=\"literal\">1</code>&nbsp;or&nbsp;<code class=\"literal\">MEDIUM</code></td>\r\n<td>Length; numeric, lowercase/uppercase, and special characters</td>\r\n</tr>\r\n<tr>\r\n<td scope=\"row\"><code class=\"literal\">2</code>&nbsp;or&nbsp;<code class=\"literal\">STRONG</code></td>\r\n<td>Length; numeric, lowercase/uppercase, and special characters; dictionary file</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>默认是1，即MEDIUM，所以刚开始设置的密码必须符合长度，且必须含有数字，小写或大写字母，特殊字符。</p>\r\n<p>有时候，只是为了自己测试，不想密码设置得那么复杂，譬如说，我只想设置root的密码为123456。</p>\r\n<p>必须修改两个全局参数：</p>\r\n<p>首先，修改validate_password_policy参数的值</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; set global validate_password_policy=0;\r\nQuery OK, 0 rows affected (0.00 sec)</pre>\r\n</div>\r\n<p>这样，判断密码的标准就基于密码的长度了。这个由validate_password_length参数来决定。</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; select @@validate_password_length;\r\n+----------------------------+\r\n| @@validate_password_length |\r\n+----------------------------+\r\n|                          8 |\r\n+----------------------------+\r\n1 row in set (0.00 sec)</pre>\r\n</div>\r\n<p>validate_password_length参数默认为8，它有最小值的限制，最小值为：</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>validate_password_number_count\r\n+ validate_password_special_char_count\r\n+ (2 * validate_password_mixed_case_count)</pre>\r\n</div>\r\n<p>其中，validate_password_number_count指定了密码中数据的长度，validate_password_special_char_count指定了密码中特殊字符的长度，validate_password_mixed_case_count指定了密码中大小字母的长度。</p>\r\n<p>这些参数，默认值均为1，所以validate_password_length最小值为4，如果你显性指定validate_password_length的值小于4，尽管不会报错，但validate_password_length的值将设为4。如下所示：</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; select @@validate_password_length;\r\n+----------------------------+\r\n| @@validate_password_length |\r\n+----------------------------+\r\n|                          8 |\r\n+----------------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql&gt; set global validate_password_length=1;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt; select @@validate_password_length;\r\n+----------------------------+\r\n| @@validate_password_length |\r\n+----------------------------+\r\n|                          4 |\r\n+----------------------------+\r\n1 row in set (0.00 sec)</pre>\r\n</div>\r\n<p>如果修改了validate_password_number_count，validate_password_special_char_count，validate_password_mixed_case_count中任何一个值，则validate_password_length将进行动态修改。</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; select @@validate_password_length;\r\n+----------------------------+\r\n| @@validate_password_length |\r\n+----------------------------+\r\n|                          4 |\r\n+----------------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql&gt; select @@validate_password_mixed_case_count;\r\n+--------------------------------------+\r\n| @@validate_password_mixed_case_count |\r\n+--------------------------------------+\r\n|                                    1 |\r\n+--------------------------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql&gt; set global validate_password_mixed_case_count=2;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt; select @@validate_password_mixed_case_count;\r\n+--------------------------------------+\r\n| @@validate_password_mixed_case_count |\r\n+--------------------------------------+\r\n|                                    2 |\r\n+--------------------------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql&gt; select @@validate_password_length;\r\n+----------------------------+\r\n| @@validate_password_length |\r\n+----------------------------+\r\n|                          6 |\r\n+----------------------------+\r\n1 row in set (0.00 sec)</pre>\r\n</div>\r\n<p>当然，前提是validate_password插件必须已经安装，MySQL5.7是默认安装的。</p>\r\n<p>那么如何验证validate_password插件是否安装呢？可通过查看以下参数，如果没有安装，则输出将为空。</p>\r\n<div class=\"linuxidc_code\">\r\n<pre>mysql&gt; SHOW VARIABLES LIKE \'validate_password%\';\r\n+--------------------------------------+-------+\r\n| Variable_name                        | Value |\r\n+--------------------------------------+-------+\r\n| validate_password_dictionary_file    |       |\r\n| validate_password_length             | 6     |\r\n| validate_password_mixed_case_count   | 2     |\r\n| validate_password_number_count       | 1     |\r\n| validate_password_policy             | LOW   |\r\n| validate_password_special_char_count | 1     |\r\n+--------------------------------------+-------+\r\n6 rows in set (0.00 sec)</pre>\r\n</div>','2017-10-29 22:55:13',1),(17,'Bind dns服务搭建','<p><strong>Bind dns</strong><strong>服务搭建</strong></p>\r\n<p>正向解析：</p>\r\n<p>1 SOA记录格式：</p>\r\n<p>&nbsp;</p>\r\n<p>1 配置主配置文件：vim /etc/named.conf</p>\r\n<p><strong>//listen-on port 53</strong></p>\r\n<p><strong>//allow-query </strong></p>\r\n<p>//listen-on-v6 port 53</p>\r\n<p>//dnssec-enable yes;</p>\r\n<p>//dnssec-validation yes;</p>\r\n<p>/* Path to ISC DLV key */</p>\r\n<p>//bindkeys-file \"/etc/named.iscdlv.key\";</p>\r\n<p>//managed-keys-directory \"/var/named/dynamic\";</p>\r\n<p>//pid-file \"/run/named/named.pid\";</p>\r\n<p>//session-keyfile \"/run/named/session.key\";</p>\r\n<p>以上全部注释掉 //</p>\r\n<p>然后recursion一定要改成yes，该项表示是否进行迭代查询。如果为no，不会进行迭代查询，则只能解析本地手工配置好的A记录。</p>\r\n<p>&nbsp;</p>\r\n<p>2 配置主配置文件中include的区域配置文件：vim /etc/named.rfc1912.zones</p>\r\n<p>在最后加上</p>\r\n<p>zone \"maleyao.com\" IN {</p>\r\n<p>&nbsp;44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type master;</p>\r\n<p>&nbsp;45&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; file \"maleyao.com.zone\";</p>\r\n<p>&nbsp;46 };</p>\r\n<p>其中maleyao.com为本域的名称</p>\r\n<p>3 配置maleyao.com.zone</p>\r\n<p>cd /var/named/</p>\r\n<p>cp -a named.localhost linuxprobe.com.zone</p>\r\n<p>vim linuxprobe.com.zone 编辑如下：</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>$TTL 1D&nbsp;&nbsp;&nbsp;&nbsp; ;设置宏ttl</p>\r\n<p>$ORIGIN maleyao.com.&nbsp;&nbsp;&nbsp; ;设置宏ORIGIN，所有ns1,ns2,mx1,mx2等相对路径后自动添加maleyao.com.</p>\r\n<p>@&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IN SOA&nbsp; ns1.maleyao.com. mail.maleyao.com. (</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; serial</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; refresh</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1H&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; retry</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1W&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; expire</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3H )&nbsp;&nbsp;&nbsp; ; minimum</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IN NS&nbsp;&nbsp;&nbsp;&nbsp; ns1</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IN NS&nbsp;&nbsp;&nbsp;&nbsp; ns2</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IN MX 10&nbsp; mx1</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IN MX 20&nbsp; mx2</p>\r\n<p>ns1&nbsp;&nbsp;&nbsp;&nbsp; IN A&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;192.168.1.88</p>\r\n<p>ns2&nbsp;&nbsp;&nbsp;&nbsp; IN A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.1.89</p>\r\n<p>mx1&nbsp;&nbsp;&nbsp;&nbsp; IN A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.1.88</p>\r\n<p>mx2&nbsp;&nbsp;&nbsp;&nbsp; IN A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.1.89</p>\r\n<p>www1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IN A&nbsp;&nbsp;&nbsp; 192.168.1.88</p>\r\n<p>www&nbsp;&nbsp;&nbsp;&nbsp; IN A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 47.93.26.235</p>\r\n<p>ftp&nbsp;&nbsp;&nbsp;&nbsp; IN CNAME&nbsp; 192.168.1.88</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>4重启服务，测试：dig &ndash;t A <a href=\"http://www.maleyao.com\">www.maleyao.com</a> @192.168.1.88</p>\r\n<p>Dig没安装可以yum install bind-utils，dig包含在这个组件里。</p>\r\n<p>参数-t 指明类型，可以是SOA,NS,MX,A,等。@192.168.1.88指明192.168.1.88为dns服务器进行解析，如果不加改参数，默认使用系统设置的dns服务器进行解析，该地址可以查看 /etc/sysconfig/network-script/ifcfg-ens33(网卡配置文件，根据实际)中的dns地址的设置。</p>','2017-11-04 17:50:23',1),(18,'Postfix,dovecot邮件服务简单设置','<p><strong>Postfix,dovecot</strong><strong>邮件服务简单设置</strong><strong>：</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p>不加ssl验证，不加mysql等虚拟用户，直接使用系统用户。</p>\r\n<p>1、首先设置hostname<br /> &nbsp;&nbsp; 事先设置好hostname的话，Postfix可以自动配置好很多参数，节省时间。我们要假&nbsp; 设的网站域名为maleyao.com，因为在named中配置了MX主机mx1.maleyao.com为当前主机，所以主机名设置为mx1.maleyao.com。</p>\r\n<p>2 centos7中postfix默认已安装。简单配置下：</p>\r\n<p>Vim <strong>/etc/postfix/main.cf</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<p>*myhostname*&nbsp; //主机名</p>\r\n<p>&nbsp;&nbsp;&nbsp;myhostname = mx1.maleyao.com</p>\r\n<p>&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp; *myorigin*&nbsp; //外发邮件时发件人的邮件域名</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;myorigin = $mydomain&nbsp; //在通过Postfix发送邮件的时候，如果From字段不完整，Postfix会根据myorigin的值将地址补全为 *@maleyao.com</p>\r\n<p>&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp; *<strong> inet_interfaces</strong> *&nbsp; //定要由服务器的那些IP地址对外提供电子邮件服务，也可以干脆写成all，代表所有网卡都能向客户提供电子邮件服务</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>inet_interfaces = all&nbsp; </strong></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp; *mydomain*&nbsp;&nbsp; //使用邮件域</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;mydomain = maleyao.com&nbsp;&nbsp; //mydomain 设置本地网络的邮件域</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp; *mydestination*&nbsp; //可接受邮件地址域名</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;mydestination = $myhostname, $mydomain&nbsp;&nbsp; //mydestination指定了postfix在收到这些域名地址为目标的邮件时，作为接受方收下邮件。如果收到的邮件既不符合转发规则，又不符合接受规则，则拒绝收信。</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp; *sasl*&nbsp; //sasl认证&nbsp;&nbsp;</p>\r\n<p>&nbsp;&nbsp; smtpd_sasl_auth_enable = no&nbsp;&nbsp;//smtp不需要SASL认证时，设置为no。</p>\r\n<p>&nbsp;</p>\r\n<p><strong>配置dovecot：</strong></p>\r\n<p>yum install dovecotvim /etc/dovecot/dovecot.conf</p>\r\n<p>加入如下内容<strong>：</strong></p>\r\n<p>protocols = imap pop3 lmtpprotocols = pop3disable_plaintext_auth = nossl = nomail_location = mbox:~/mail:INBOX=/var/mail/%u</p>\r\n<p>&nbsp;</p>\r\n<p>然后切换到该用户身份后在家目录中建立用于保存邮件的目录，记得重启一下服务并加入到开机启动项就完成了对Dovecot服务程序的全部配置部署步骤：</p>\r\n<p>useradd user1echo &ldquo;pass1234&rdquo; | passwd &ndash;stdin user1su &ndash; user1mkdir -p mail/.imap/INBOXexit</p>\r\n<p>然后可以在windows上用MUA客户端进行验证，验证前将本虚拟机和windows上的DNS改成自己搭建的DNS。</p>\r\n<p>可以使用firefox进行验证，<a href=\"mailto:用新建的user1用户也就是user1@maleyao.com\">用新建的user1用户也就是user1@maleyao.com</a>进行登录，密码为刚设置好的pass1234。</p>\r\n<p><a href=\"mailto:验证可以向root@maleyao.com或者root\">验证可以向root@maleyao.com或者root</a>的别名bin@maleyao.com发送邮件，都是由root用户收到。别名设置在/etc/aliases中。</p>\r\n<p><a href=\"mailto:也可以向自己user1@maleyao.com\">也可以向自己user1@maleyao.com</a>发送邮件验证。</p>','2017-11-04 17:51:54',1),(19,'MySQL5.7主从同步设置','<p>MySQL5.7主从同步设置：</p>\r\n<p>Mysql主从同步在5.7中可以通过两种方式：</p>\r\n<p>（1） 基于bin-log日志进行同步，master&mdash;》bin-log&mdash;》relay-log(slave)&mdash;》slave。</p>\r\n<p>（2） 基于事务，新增功能，有空再研究。</p>\r\n<p>这里简单配置bin-log日志方式的mysql+keepalived互为主从的HA同步。</p>\r\n<p>&nbsp;</p>\r\n<p>1 mysql安装：</p>\r\n<p>为了省事，使用官网的rpm包进行yum安装。</p>\r\n<p>下载rpm包</p>\r\n<pre class=\"language-markup\"><code>wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\r\n\r\nYum localinstall mysql57-community-release-el7-11.noarch.rpm</code></pre>\r\n<p>&nbsp;</p>\r\n<p>可以查看yum repolist all | grep mysql，一般情况5.7为enable,显示正常就可以安装了。Yum install mysql-community-server</p>\r\n<p>安装后启动mysql。Systemctl start mysqld，安装后默认会在/var/log/mysqld.log生成初始密码，grep mysql /var/log/mysqld.log查看。然后登陆mysql &ndash;uroot &ndash;p，回车然后粘贴刚才查看的密码。</p>\r\n<p>登陆后必须修改密码，密码必须包含字母数字特殊字符，长度至少8位，如果想修改为简单的密码需修改密码策略。密码策略由validate_password_policy变量指定，默认为1(MEDIUM)。可以改成0(LOW)就OK了，只需要密码至少8位就行了。当然想少于8位可以修改对应的变量的值。show variables like \'%password%\' 查看对应的变量名称，然后修改就OK。这里只修改policy：</p>\r\n<pre class=\"language-markup\"><code>Set global validate_password_policy=0;</code></pre>\r\n<p>临时修改密码策略，然后修改密码：</p>\r\n<pre class=\"language-markup\"><code>Alter user user() identified by &ldquo;12345678&rdquo;;</code></pre>\r\n<p>在两台虚拟机都装好mysql。</p>\r\n<p>至此mysql安装完成。</p>\r\n<p>&nbsp;</p>\r\n<p><strong>接下来配置mysql主从同步：</strong></p>\r\n<pre class=\"language-markup\"><code>host1 192.168.1.10\r\n\r\nhost2 192.168.1.20</code></pre>\r\n<p>&nbsp;</p>\r\n<p>如果两台服务器需要同步的数据库不一致，可以先用mysqldump或者工具，比如navicat等，先把两个数据库数据保证一致。</p>\r\n<p>（1）配置mysql配置文件：vim /etc/my.conf</p>\r\n<p>添加以下内容：</p>\r\n<pre class=\"language-markup\"><code>server-id=10   #mysql服务器id,1-255,两台设置需不同\r\n\r\nlog-bin=mysql-bin   #开启bin-log模式的主从复制\r\n\r\nbinlog-ignore-db = mysql,information_schema   #忽略写入binlog日志的库\r\n\r\nauto-increment-increment = 2   #字段变化增量值，因为两台服务器互为主从，所以需要设置，错开。\r\n\r\nauto-increment-offset = 1              #初始字段ID为1\r\n\r\nslave-skip-errors = all                #忽略所有复制产生的错误</code></pre>\r\n<p>&nbsp;</p>\r\n<p>（2）创建slave远程登录账号user20，密码12345678：</p>\r\n<pre class=\"language-markup\"><code>grant replication slave on *.* to user20@&rsquo;192.168.1.20&rsquo; identified by &lsquo;12345678&rsquo;；</code></pre>\r\n<p>&nbsp; &nbsp; &nbsp; 注意，这种方法创建账号会有警告，如果不想有警告可以先创建账号，再授权，分开执行不会有警告。</p>\r\n<p>然后flush privileges；使命令生效。</p>\r\n<p>（3）重启mysql，然后登陆，然后查看master状态：</p>\r\n<pre class=\"language-markup\"><code>mysql&gt; show master status;</code></pre>\r\n<p>查看file值和position值:类似mysql-bin.000001和154，记录这两个值，待会slave配置时需用到。</p>\r\n<p>（4）登陆另外一台服务器的mysql。设置为slave：</p>\r\n<p>4.1 修改配置文件，如果这台服务器只是slave，那么只需要修改server_id与master不同就OK，但是这里配置互为主从，所以参照master的配置，修改server_id，auto-increment-increment不同就行了，这里设置server_id =20，auto-increment-increment=2。</p>\r\n<p>同样创建slave远程登录账号：</p>\r\n<pre class=\"language-markup\"><code>grant replication salve on *.* to user10@&rsquo;192.168.1.10&rsquo; identified by &lsquo;12345678&rsquo;\r\n\r\nflush privileges;        推送权限</code></pre>\r\n<p>&nbsp;</p>\r\n<p>然后重启mysqld，查看master信息，记录两个变量的值：file，position。</p>\r\n<p>（5）互相连接对方的bin-log：</p>\r\n<pre class=\"language-markup\"><code>Change master to\r\n\r\nmaster_host=\'192.168.1.10\',master_port=3306,master_user=\'user10\',master_password=\'12345678\',master_log_file=\'mysql-bin.00001\',master_log_pos=154;\r\n\r\nchange master to\r\n\r\nmaster_host=\'192.168.1.20\',master_port=3306,master_user=\'user20\',master_password=\'12345678\',master_log_file=\'mysql-bin.00001\',master_log_pos=154;</code></pre>\r\n<p>&nbsp;</p>\r\n<p>然后start slave，配置完成。</p>\r\n<p>查看是否已经同步：</p>\r\n<pre class=\"language-markup\"><code>Show slave status\\G</code></pre>\r\n<p>如果Slave_IO_Running: Yes</p>\r\n<p>&nbsp;&nbsp;&nbsp; Slave_SQL_Running: Yes</p>\r\n<p>表示已经同步成功。</p>\r\n<p>&nbsp;</p>\r\n<p>注意：这里面的file和master_log_pos跟master上show master status显示的值必须相同。</p>\r\n<p>注意：如果需要重新配置，只需change master to（单个改变的选选），其他选选默认不变，如果出现错误，可能需要先stop slave;然后reset slave;然后再change master to&hellip;..</p>\r\n<p>&nbsp;</p>\r\n<p>接下来可以在某个数据库中更新数据，看另外一个服务器中的数据是否会更新。</p>\r\n<p><strong>总结：</strong></p>\r\n<p>1．在主服务器上，必须开启二进制日志机制和配置一个独立的ID</p>\r\n<p>2．在每一个从服务器上，配置一个唯一的ID，创建一个用来专门复制主服务器数据的账号</p>\r\n<p>3．在开始复制进程前，在主服务器上记录二进制文件的位置信息</p>\r\n<p>4．如果在开始复制之前，数据库中已经有数据，就必须先创建一个数据快照（可以使用mysqldump导出数据库，或者直接复制数据文件）</p>\r\n<p>5．配置从服务器要连接的主服务器的IP地址和登陆授权，二进制日志文件名和位置</p>\r\n<p>6. &nbsp;如果需要重新配置，可能需要先stop slave;然后reset slave;然后再change master to&hellip;..</p>\r\n<p>&nbsp;</p>\r\n<p><strong>最后：注意防火墙开放3306端口</strong></p>','2017-11-04 17:53:12',1),(20,'配置mysql的keepalived高可用HA','<p>接下来配置keepalived高可用HA：</p>\r\n<p>&nbsp;&nbsp;&nbsp; Keepalived基于vrrp协议，主要就是两台或者多台主机共同组成一个虚拟组，共用一个虚拟IP（VIP），虚拟组MAC地址为固定格式，随master变化而变化，vmac和当前master一一对应。Master会根据设置的间隔时间发送vrrp通告（组播，告诉其他slave自己处于正常工作状态）和arp（广播），而slave（BACKUP状态）只会监听vrrp，只要处于同一个广播域，就能收到vrrp包，当slave能收到master的vrrp包时，就只会保持BACKUP状态：Activating healthchecker。</p>\r\n<p>&nbsp; &nbsp; 而当slave在3个间隔时间后仍接收不到master的vrrp时，会认为自己是新的master，并向外发送vrrp通告，然后通过优先级选举新的master，优先级最高的salve在等待设置的抢占延迟时间之后，抢占master，向外发送vrrp和arp包，成为真正的新master，其中arp包的ip为vip，mac为当前新master对应的mac（遵循vmac的固定格式）。这样，其他host用户会收到新master发出的arp包，更新自己的mac表，然后访问虚拟主机实际访问的是新master。</p>\r\n<p>&nbsp; &nbsp; Slave,也就是将state设置为BACKUP时，slave也可以设置高优先级的一方为非抢占模式，即使优先级比当前master更高，也不会抢占vip。这样可以避免优先级高的服务器修复之后重新抢占master，造成频繁切换，毕竟切换master还是需要一定时间。</p>\r\n<p>安装：yum install keepalived</p>\r\n<p>配置：vim /etc/keepalived/keepalived.conf</p>\r\n<pre class=\"language-markup\"><code>Global_defs  router_id，虚拟组名称，随便取，所有主备处于同一组\r\n\r\nVrrp_instance ：state主备都设置BACKUP，这样可以设置高优先级的为非抢占模式。\r\n\r\nInterface 物理网卡名称，我这里为ens33，以前有很多eth0。\r\n\r\nVirtual_route_id 虚拟组id，主备都必须设置相同。\r\n\r\nPriority  优先级0-255\r\n\r\nnopreempt 设置为非抢占模式，如果不加，就是抢占模式\r\n\r\nauthentication 认证用的，所有服务器设置相同就OK，默认都一样\r\n\r\nVirtual_ipadders 虚拟socket（VIP+port）相关设置，其中IPV为同一网段的空闲地址，映射real_server的配置。用户访问虚拟socket，实际访问的是real_server定义的真实socket。\r\n\r\nlb_algo开始的4行为lvs集群相关设置，我这里只是对应mysql做HA，所以注释掉。\r\n\r\nReal_server 和vitual_ipaderrs对应的真实socket(VIP+port)设置\r\n\r\nnotify_down 设置监听失败后启动脚本程序的路径\r\n\r\nTCP_CHECK，定义监听TCP3306的具体设置，keepalived中还可以有其他几种监听类型，不光是TCP_CHECK，比如还可以监听WEB服务等，以后有需要再了解。</code></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;<img src=\"http://47.93.26.235/static/uploads/1/03keepalived.conf.png\" /></p>\r\n<p>&nbsp;</p>\r\n<p>然后需要创建设置中的脚本文件：</p>\r\n<pre class=\"language-markup\"><code>vim /opt/mysql.sh\r\n\r\n#!/bin/bash\r\n\r\npkill keepalived</code></pre>\r\n<p>&nbsp;</p>\r\n<p>因为只是mysql的HA，所以这里简单设置直接结束keepalived进程，也就是如果满足监听条件，就会调用该脚本结束keepalived进程，slave就不能接收到vrrp包。从而通过选举机制，产生新的master。</p>\r\n<p>&nbsp;</p>\r\n<p>最后注意防火墙相关设置：</p>\r\n<p>比如允许vrrp包的组播，我这里直接关了firewalld。</p>','2017-11-04 17:56:24',1),(39,'测试图片上传','<p><img src=\"http://47.93.26.235/static/uploads/1/09IMG_20170907_074828.jpg\" width=\"597\" height=\"1063\" /></p>','2017-11-07 22:09:10',1),(40,'测试图片上传','<p><img src=\"http://47.93.26.235/static/uploads/1/07IMG_20171007_125949.jpg\" width=\"682\" height=\"382\" /></p>','2017-11-07 22:10:39',1),(42,'自动化运维平台应该包括哪些特性？','<div>作者：刀把五<br />链接：https://www.zhihu.com/question/23228213/answer/116940889<br />来源：知乎<br /><br />\r\n<div>\r\n<p>结合现在云计算和DevOps的发展趋势，我觉得一个成熟的自动化运维平台应该包括以下的特性：<br /><strong>一、支持混合云的CMDB</strong><br />现在越来越多的服务器都转到了云上，而主流的公有云、私有云平台都拥有比较完备的资源管理的API，这些API也就是构建一个自动化CMDB的基础。<br />新一代的自动化运维平台应该是可以基于这些API来自动维护和管理相关的服务器、存储、网络、负载均衡的资源的。<br />通过API对资源的操作都应该被作为操作日志记录下来，以备作为后续操作审计的基础数据。</p>\r\n<p>CMDB这个东西听上去是老生常谈，但这个确实是所有运维工具的基础设施。<br />而基于开源工具做运维平台最大的麻烦，就是如何在各个工具之间把CMDB统一起来。<br />CMDB不统一起来，就意味着一旦要增加一台服务器，可能要在各个运维工具里面都要同步一下，这个还是非常折腾滴。。。</p>\r\n<p><strong>二、比较完备的监控+应用性能分析（APM）</strong><br />能支持对平台的可用性、服务器的性能、各种服务（web服务、应用服务、数据库服务）的性能进行监控。做的好一些应该能进行更深入、或者关联性的性能分析。</p>\r\n<p>现在市面上一般都会将资源性能监控和应用性能监控（APM）混合着讲，这里面的产品确实也有很多都是重叠的，两方面都会涉及到。</p>\r\n<p>开源的性能监控系统主流有的Zabbix、Nagios，国产的开源监控平台有小米OpenFalcon，但这些基本都只是做基本的资源监控（服务器，磁盘、网络等）和简单的服务软件的性能监控（中间件，数据库等）。</p>\r\n<p>而市面上的APM系统更主打的功能是应用性能分析，比如能精确定位到某个应用的URL的访问速度快慢，某些SQL执行速度的快慢，这些对于开发人员和运维人员快速定位问题还是很有帮助的。<br />APM这方面的商业工具，国外比较主流的有New Reclic、Dynatrace，国内的也就是透视宝、Oneapm、听云等，他们也提供了API进行集成。<br />APM这方面的开源工具有pinpoint（一个韩国团队开源的），zipkin（twitter开源），cat（大众点评开源）。</p>\r\n<p><strong>三、有一个还不错UI的批量运维工具</strong><br />在业务发展比较快的情况下，从几台服务器，到几十台服务器，再到几百台服务器，批量运维的需求很自然就产生了，老板也希望越少的人干越多的活。</p>\r\n<p>现在也有不少开源的批量运维工具，也都比较成熟了，比如puppet、chef、ansible、saltstack。<br />puppet和chef都是ruby做的，实话实说，ruby的熟手市面上很少，比python不是难招一点。</p>\r\n<p>我个人比较推荐使用ansible或者saltstack，这两个系统都是python写的，代码质量和社区活跃度都挺不错的。<br />ansible有官方的web ui&mdash;&mdash;Tower，但实话实说不好用，所以我们也在重新做一套自己用起来更顺手的WEB UI。</p>\r\n<br />\r\n<p><strong>四、日志集中分析工具</strong><br />线上系统最常规的问题定位方式，就是日志分析了。<br />随着服务器的增多，日志的分析定位也成为一个难点和痛点（想象一下，系统出故障之后，要去几十甚至数百个节点去上去查日志，是有多折腾）。</p>\r\n<p>国内有一家叫日志易的公司，是专门做日志分析方面的运维工具的。<br />另外还有一家log insight，也是做这个领域，但产品好像还处于beta阶段。</p>\r\n<p>日志分析这个领域现在是一个热点，现在的开源方案也比较多了，比如著名的ELKStack，还有Flume+Kafka+Storm的体系。<br />上面这两个方案相对重一些，部署比较复杂，网上介绍的文章也不少。</p>\r\n<p>比较轻量级的开源日志集中采集方案有python做的Sentry，他是通过改造各种语言的日志采集框架来实现日志的集中采集，各种主流的开发语言的日志框架都支持得很完整了，比如java的log4j和logpack。<br />Sentry的官网在此：<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=https%3A//getsentry.com/welcome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sentry - Track exceptions with modern error logging for JavaScript, Python, Ruby, Java, and Node.js</a></p>\r\n<p><strong>五、持续集成和发布工具</strong><br />这方面其实比较难有统一的需求，很多公司集成发布的做法都差异挺大的。<br />持续集成方面，一般用jekins的比较多，这方面网上介绍的文章也很多。</p>\r\n<p>而如何把打好的包发布至各台服务器，则可以通过批量运维工具或者脚本来完成了。<br />版本发布的过程涉及到很多细节，包括了版本文件的上传、分发、版本管理、回滚等各种操作。<br />对于一般不太复杂的项目，我比较推荐的做法是把打包好的文件上传到svn上，然后通过脚本在各台服务器上进行发布操作就行了，这样其实是利用了SVN来完成文件的上传、分发、版本管理、回滚等各种操作。</p>\r\n<p><strong>六、安全漏洞扫描工具</strong><br />现在一个稍微有点知名度的系统，都会遭受各种各样的安全攻击的折磨。<br />一般的公司不太可能请得起专职的安全工程师，所以运维工程师最好能自己借助一些安全扫描工具来发现自己系统的漏洞。<br />安全工具方面我了解不多，不太熟这个领域的开源工具。<br />之前乌云网推出过一个SaaS化的漏扫平台&mdash;&mdash;唐朝巡航，有对外提供漏洞扫描的API，不过最近乌云网一直在升级，所以也就暂时无法调用了。</p>\r\n个人觉得，如果上述功能都有了，基本上大部分中小规模企业的日常运维工作的高频操作都覆盖到了。<br />如果是比较大的互联网企业，或者还有一些特殊的业务需求，那就具体问题具体分析了。</div>\r\n</div>','2017-11-12 03:45:40',1),(43,'python 练习','<div>\r\n<div>\r\n<p><span style=\"font-size: 12pt;\">一 不同的阶段，不同的练习</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">我把IT编程类的学习，一般分为以下几个阶段：（以下为递进关系）</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">程序逻辑阶段</span></p>\r\n<p><span style=\"font-size: 12pt;\">练习基本都是解答数学题，如万年历，斐波那契数列，完全数，鸡兔同笼问题。要求掌握循环、嵌套循环，二维数组熟练应用。</span></p>\r\n<p><span style=\"font-size: 12pt;\">面向对象阶段</span></p>\r\n<p><span style=\"font-size: 12pt;\">思维要从面向过程向面向对象，面向接口转变。没有一定代码量的基础，转不过，把面向过程的方法调用，参数传递，方法如何定义设计弄清楚，再转到类的设计，消息传递上。</span></p>\r\n<p><span style=\"font-size: 12pt;\">这个时候的练习走向综合性。没有一定代码量的积累是很难到OOAD（面向对象的设计与分析）的。</span></p>\r\n<p><span style=\"font-size: 12pt;\">某个开发语言类库，API</span></p>\r\n<p><span style=\"font-size: 12pt;\">Java如io, lang, util, text, sql包下类的应用</span></p>\r\n<p><span style=\"font-size: 12pt;\">此时多做一些针对性的，如io, jdbc的</span></p>\r\n<p><span style=\"font-size: 12pt;\">与这个核心语言相关联的其他必要知识点</span></p>\r\n<p><span style=\"font-size: 12pt;\">如web开发语言，都会涉及到 html, css, js(jq), db</span></p>\r\n<p><span style=\"font-size: 12pt;\">手机端开发相对单一，也会有sqlite, 简单html, h5</span></p>\r\n<p><span style=\"font-size: 12pt;\">这部分甚至可以单独项目练习，最好是结合最后的项目（下面有推荐）。</span></p>\r\n<p><span style=\"font-size: 12pt;\">框架阶段</span></p>\r\n<p><span style=\"font-size: 12pt;\">分为基本和扩展框架</span></p>\r\n<p><span style=\"font-size: 12pt;\">比如Java，先掌握jsp, servlet，然后是Struts2, SpringMVC，MyBatis等轻量级框架</span></p>\r\n<p><span style=\"font-size: 12pt;\">这时的项目，以大的综合性为主，基本上就是你想到的最终项目。</span></p>\r\n<p><span style=\"font-size: 12pt;\">二、锁定一个最终的项目作为目标，Step by Step</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">典型练手项目如：Web学习项目三件套：BBS（论坛），商城，CRM，适合Java, PHP, <a class=\" external\" href=\"https://link.zhihu.com/?target=http%3A//ASP.NET\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">ASP.NET</span></a>的学习。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">客户端典型练习项目：MIS（信息管理系统）， 小工具类（记事本，播放器），适合Android , iOS , C语言基础的学习。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">这样的项目一定要完全模仿网上现成产品的功能来实现，要&ldquo;高仿&rdquo;，甚至前台页面的样式代码可以直接从网上扒下来。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">MVP原则（最小化可行产品）</span></p>\r\n<p><span style=\"font-size: 12pt;\">1、用学的东西做出最小化产品来</span></p>\r\n<p><span style=\"font-size: 12pt;\">不同的学习阶段，可以做出不同的练习、项目。但是不能照着书本，视频，一行一行敲过，运行完了，就OK了。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">而是要做扩展，在这个基础，想想还能不能添加其他的功能。要有产品意识，而不是Demo或练习的思维。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">2、用掌握的最少知识做出一个产品来，再逐步扩展。</span></p>\r\n<p><span style=\"font-size: 12pt;\">如想做一个Web项目，你需要掌握html,css,js(jq), database, Java（或php, python, .net)，这些知识点，你一个个自学下来，太零碎，如果没有项目驱动，用最小化项来实现，整个学习效果都不好。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">所以要分清核心，在关键知识点掌握基础上就做项目来提高，如jsp，servlet, jdbc 加简单html ,少量js，即可实现一个完整web项目功能。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">在这个基础上，向后端扩展，就是掌握轻量级框架，向前端扩展就是掌握html, js, jquery, bootstrap</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">3、尝试用编程开发来提高你工作中的效率</span></p>\r\n<p><span style=\"font-size: 12pt;\">把你工作中的痛点（低效率），从项目的角度来思考，搞一个项目去提升工作效率，解决痛点问题。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">以学习Python为例，我做了哪些项目，是如何快速提高并应用的？这些项目是自己设计并实现的。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">1、确定体系，确定方向</span></p>\r\n<p><span style=\"font-size: 12pt;\">刚开始我了解了一下Python能做哪些：爬虫、Web开发、科学计算，游戏、图形开发... ... 太广啦，我需要找一个学习的切入点，即先学什么内容，用Python去做什么？</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">选择爬虫作为我Python学习的开始。方向确定后，简单了解语法，找了几段代码边看边改，熟悉Python爬虫，一开始是从网上爬图片，然后是页面解析 xpath , beautifulsup , 写了这篇文章：当我们学Python时，我们学什么？。上周一个Python的公众号跟我联系要求转发。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">基本的数据抓取没有问题后，我开始学习Scrapy框架（中间还学习了mongodb），一次数据爬取可以达到10W+，写了这篇文章：60小时Python爬虫学习：从100行数据到10W+数据，这篇文章也受到某V的关注，说很不错。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">手头的数据多了，就想这多数据如何处理，于是接触数据分析，刚开始数据分析时困难重重，没想到我写的爬虫的文章下，就有留言给我推荐书。开始了Python科学计算的学习。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">2、选择项目，解决问题</span></p>\r\n<p><span style=\"font-size: 12pt;\">在Python数据统计和分析上，刚好看到简书上一个连载榜的统计，顺带帮助解决这个数据抓取和统计。日常工作中也有一些小的应用。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">然后围绕简书的数据，写了几篇数据分析，也受到了简叔关注和点赞。之后也加了一些与联系我想做数据分析或想要数据，或者跟着学习的朋友。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">3、快速输出，由此及彼</span></p>\r\n<p><span style=\"font-size: 12pt;\">学习是一个输入的过程，而项目和文章是输出，高质量的输出就是检查你的学习效果的最好方式。Python的整个内容已经很清晰。写文章的过程还了解数据可视化，分词技术。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">最近关注儿童如何学习编程开发，《与孩子一起学编程（Python）》，也想比较一下儿童编程如何教，儿童学Python与学scratch有什么不同。</span></p>\r\n<p><span style=\"font-size: 12pt;\">如果你是没有计算机基础，没有编程语言基础，看看这本书，就知道学习掌握一种开发语言根本不是问题。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">Python数据分析还要走一个比较长的时间，了解到Python在Web开发中的优势后我开始学习Python Web，掌握了Django开发整个流程，我选择的是做个博客。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">我的Python学习文章：</span></p>\r\n<p><span style=\"font-size: 12pt;\">Python爬虫30篇：Python爬虫学习</span></p>\r\n<p><span style=\"font-size: 12pt;\">数据分析12篇：Python数据分析</span></p>\r\n<p><span style=\"font-size: 12pt;\">PythonWeb开发 3篇：Python Web开发</span></p>\r\n<p><span style=\"font-size: 12pt;\">自己多问下为什么学python</span></p>\r\n<p><span style=\"font-size: 12pt;\">如果一门语言没有改变你的编程思维，那么它不值得你去学习&rdquo;。如果这么说，我们大学的时候，学习了c，c++，java，C#，算是值得学习么？很多时候是不值得，我觉得我们大学的课程就是用java，c#，c++把\"C程序设计\"又上了一遍.</span></p>\r\n<p><span style=\"font-size: 12pt;\">这是因为，学校的老师会C和java之类的，所以要跟着规矩开这门课，（这也就是为什么，许多学校还在教vb，）,这也就是为什么，你所以为的一样就是大家都有For都有while，都有switch..都有Class...都有int 都有float,所谓的不一样就是用C有指针，java没有，这就是为什么教育是失败的，这也就是为什么，我目前认识的几个编程大牛</span></p>\r\n<p><span style=\"font-size: 12pt;\">python的优点：简单 我所说的简单，是相比于象C和C++这样的语言,你为了编程，要学习许多偏底层的东西.在比如，你在学习一个新的编程范式，或者想要马上做个例子看看，试验某个API,如果你是写java的，你不得不去写一个main，写一些构造，即使有IDE这样的东西，能够为你带来代码生成器，而我做得就是写一段&ldquo;脚本&rdquo;，或者打开python交互式解释器就行了。</span></p>\r\n<p><span style=\"font-size: 12pt;\">自己认识的python朋友出去工作，工资比较高，然后自己又刚刚好是会python所以选择学习python，这样的人比较危险但是也比较有激励，还有就是觉得python比其他开发语言好用。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">学完python前景会咋样</span></p>\r\n<p><span style=\"font-size: 12pt;\">其实我个人是很看好python未来的就业前景的，因为我认识太多的工程师都已经在学python，很多都是月收入大几万的</span></p>\r\n<p><span style=\"font-size: 12pt;\">我个人也并非一直用python。前些年主要用c/c++以及java开发一些通信，移动系统，互联网通信。近3年开始才转向python。坦白的说，这可能与你相处的公司以及环境不大一样。随便举个例子，google的protocol buffer协议一出来就具有c++/python/java三种语言支持。google的广告系统早在03,04年左右就一并对python进行了webservice支持，大部分涉及基础核心系统的公司，都开始对python进行了扩展支持。甚至开源社区的postgresql数据库，除了自身的ansi SQL,pgsql,pg/TCL,PG/PERL之外对python进行了内嵌支持，唯独却没有呼声很高的java。在FREEBSD（MIT）/LINUX(GPL)平台上，对java可能排斥性比较大，但综合而言，目前python发展还没有java那种普及，主要是python大部分工作仍然是在较为深入地系统层和框架层做设计开发，例如django,SQLAlchemy,fail2ban,mail邮件系统,twisted等等。这部分对于那种习惯应用前辈们框架的编码人员而言，缺乏创造力的他们根本无法适用这种开发。尤其在python涉及一些系统层面需要有较强的c/c++能力，这部分人在国内要么就累得要死没时间，要么就啥都不会就会拷贝代码，而国内公司也鲜有主动去做这部分基础劳动的，大多都是等别人做好了在直接拿来用，所以造就了任何技术性的东西出来，国内都是先等等看，然后抄袭应用。</span></p>\r\n<p><span style=\"font-size: 12pt;\">大环境如此，但千万误认为先等等看吧。对于一个技术人员而言，缺乏对新技术的渴望与热情，这是一种非常危险的事情。我工作8年了，按照国内很多的人的说法早已不做代码了，但又一次在听一个老外的演讲，他说他50多岁仍然每天坚持写代码，了解最新的动态，所以他才能做到他们公司的首席科学家，因此它才能时刻指导项目团队前进并保证项目的质量。他坦言对于一个不写代码并且不了解最新的技术动态的技术人员或者技术团队的负责人而言，这种团队也就足够做作小项目，一旦压力和项目过大，就会有很多问题漏出来。</span></p>\r\n<p><span style=\"font-size: 12pt;\">对于新人而言，无论学习什么技术，都要以鼓励的姿态出现。太多用薪水和你个人所看到的现状去衡量一门技术，那绝对是欠缺眼光的。任何一门技术，一旦有人学习，他有可能逐渐成为这个领域的专家，即便再滥再没有人用的开发语言技术，他也有可能就是明日的奠基者或者大师。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">自己如何确定目标</span></p>\r\n<p><span style=\"font-size: 12pt;\">在生活中学会不断挖掘自己的潜力。我们都是一个普通人，可能并不清楚自己到底在哪方面占有优势。所以，学着在生活中找到自己的优势，并根据优势选择一定的就业方向。</span></p>\r\n<p><span style=\"font-size: 12pt;\">不随波逐流。不要看周围的人做什么，自己就做什么，也许别人做的并不适合你。别人的优势很可能会成为你的劣势。所以，坚定自己的想法，让自己知道那些方面适合自己，自己可以胜任。</span></p>\r\n<p><span style=\"font-size: 12pt;\">不断尝试可能成为自己的优势。你不知道什么适合自己，所以才要大胆、勇敢地尝试。找到一种可以属于你的独特的优势。</span></p>\r\n<p><span style=\"font-size: 12pt;\">坚定信念。一旦你坚定了自己的信念，就不要被别人的意见或是讽刺或是嘲笑所干扰。别人不是你，不懂的你在想什么，不清楚你开始这件事的源头。你的事情，不了解你的人，没有资格轻易评说。</span></p>\r\n<p><span style=\"font-size: 12pt;\">不茫然，不多想。别让太多的事干扰到你奋斗下去的信念。梦想不容许太多的杂念。那些杂念只会让你的心愈来愈脆弱，多为一个人考虑，到头来，伤害的还是自己。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">选择自己学习方法</span></p>\r\n<p><span style=\"font-size: 12pt;\">每个人都有适合自己的方法，有的人去选择自学，有的人选择看视频学习，有的人选择报名培训班，那在这个时候，你就要自己考虑清楚，到底那样对的帮助是最大的，个人觉得是跟着培训班最好的，毕竟人家的实战项目多，我们学软件开发的都知道实战项目对于学好一门语言是 很重要的。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">学习python有那些误区</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">具体里面的误区非常的多，那些就不需要我去写出来，我给你说的一般都是心态的问题，首先一个觉得自己会java和c++，然后我学习python就很牛，但是你要知道语言是有很多相同的地方，但是不是通用，一定要自己学习的仔细。还有一种就是觉得我不会英语，我要先去把英语学习好在来学python。因为自己想还坏主意然后学习，这样的都是容易找进误区的。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">怎么样才能学好python</span></p>\r\n<p><span style=\"font-size: 12pt;\">学好python你需要一个良好的环境，一个优质的开发交流群，群里都是那种相互帮助的人才是可以的，我有建立一个python学习交流群，在群里我们相互帮助，相互关心，相互分享内容，这样出问题帮助你的人就比较多，群号是304加上050最後799，这样就可以找到大神聚合的群，如果你只愿意别人帮助你，不愿意分享或者帮助别人，那就请不要加了，你把你会的告诉别人这是一种分享。</span></p>\r\n<br />\r\n<p><span style=\"font-size: 12pt;\">感觉写的好，对你有帮助，就点个赞呗，别光只收藏哈.~(￣▽￣)~</span></p>\r\n</div>\r\n</div>','2017-11-19 09:41:56',1),(44,'python 练习','<div>\r\n<div>\r\n<p>10个Python练手项目：</p>\r\n<ul>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-practice-1.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习一：即时标记</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-reportlab.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习二：画幅好画</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-pro-powerfullxml.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习三：万能的XML</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-pro4-newsagent.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习四：新闻聚合</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-project5-socketchat.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习五：虚拟茶话会</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-project6-cgi.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习六：使用CGI进行远程编辑</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-project7-board.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习七：自定义公告板</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-project8-xml-rpc.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习八：使用XML-RPC进行远程文件共享</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-project9-p2p-gui.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习九：文件共享2-GUI版本</a></li>\r\n<li><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.the5fire.com/python-project10-diy-game.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">python项目练习十：DIY街机游戏</a></li>\r\n</ul>\r\n<p>其实，我觉得LZ可以找份兼职或者实习做做，既能锻炼能力还能有份额外的收入</p>\r\n</div>\r\n<br /><br />作者：伽马交易员<br />链接：https://www.zhihu.com/question/29372574/answer/105700284<br />来源：知乎<br />著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</div>','2017-11-19 09:46:44',1),(45,'centos7 安装redis并开机启动','<p>首先确认是否具有root权限，因为vim、设定redis开机启动需要root权限</p>\r\n<pre class=\"prettyprint\"><code class=\"hljs  has-numbering\"></code></pre>\r\n<p>redis 下载 <a href=\"https://redis.io/download\" target=\"_blank\" rel=\"noopener\">https://redis.io/download</a></p>\r\n<pre class=\"language-markup\"><code>wget http://download.redis.io/releases/redis-4.0.2.tar.gz</code></pre>\r\n<p>解压缩</p>\r\n<pre class=\"language-markup\"><code>tar xzf redis-3.2.8.tar.gz</code></pre>\r\n<p>进入解压后的文件目录</p>\r\n<pre class=\"language-markup\"><code>cd redis-3.2.8</code></pre>\r\n<p>redis安装相对简单 直接编译即可</p>\r\n<pre class=\"language-markup\"><code>make</code></pre>\r\n<p>创建存储redis文件目录</p>\r\n<pre class=\"language-markup\"><code>mkdir -p /usr/local/redis</code></pre>\r\n<p>复制redis-server redis-cli到新建立的文件夹</p>\r\n<pre class=\"language-markup\"><code>cd /home/lukas/redis-3.2.8/src \r\ncp redis-server /usr/local/redis/\r\ncp redis-cli /usr/local/redis/</code></pre>\r\n<p>复制redis的配置文件 这里是复制，所有不需要再保存原来的配置文件（<strong>操作配置文件，一定要备份原来的配置文件，具体为什么你懂的</strong>）</p>\r\n<pre class=\"prettyprint\"><code class=\"hljs avrasm has-numbering\"></code></pre>\r\n<pre class=\"language-markup\"><code>cd /home/lukas/redis-3.2.8/\r\ncp redis.conf /usr/local/redis/\r\n\r\n编辑配置文件 redis.conf\r\n\r\ncd /usr/local/redis/\r\nvim redis.conf</code></pre>\r\n<pre class=\"prettyprint\"><code class=\"hljs avrasm has-numbering\"></code><code class=\"hljs bash has-numbering\"></code></pre>\r\n<p>daemonize 改为yes 后台运行 （配置文件具体说明<a href=\"http://www.cnblogs.com/kreo/p/4423362.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/kreo/p/4423362.html</a>），/进行快捷查找，/daemonize 回车 按inset进入编辑 <br /><img title=\"\" src=\"http://img.blog.csdn.net/20170401141210981?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd3d3NjM5MTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\" /></p>\r\n<p>添加开机启动服务（复制下方代码时，在vim中一定要检查是否一致）</p>\r\n<pre class=\"language-markup\"><code>vim /etc/systemd/system/redis-server.service</code></pre>\r\n<pre class=\"language-markup\"><code>[Unit]\r\nDescription=The redis-server Process Manager\r\nAfter=syslog.target network.target\r\n\r\n[Service]\r\nType=simple\r\nPIDFile=/var/run/redis_6379.pid\r\nExecStart=/usr/local/redis/redis-server /usr/local/redis/redis.conf         \r\nExecReload=/bin/kill -USR2 $MAINPID\r\nExecStop=/bin/kill -SIGINT $MAINPID\r\n\r\n[Install]\r\nWantedBy=multi-user.target</code></pre>\r\n<p>设置开机启动</p>\r\n<pre class=\"language-markup\"><code>systemctl daemon-reload \r\nsystemctl start redis-server.service \r\nsystemctl enable redis-server.service</code></pre>\r\n<p>创建redis命令软连接</p>\r\n<pre class=\"language-markup\"><code>ln -s /usr/local/redis/redis-cli /usr/bin/redis</code></pre>\r\n<p>测试redis <br /><img title=\"\" src=\"http://img.blog.csdn.net/20170401141750925?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd3d3NjM5MTI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\" /></p>\r\n<p>说明：</p>\r\n<pre class=\"language-markup\"><code>/home/lukas/redis-3.2.8/src \r\n/home/lukas/redis-3.2.8/ </code></pre>\r\n<p><br />该路径我本机redis解压路径，请注意对号入座！</p>','2017-11-21 13:31:38',1),(46,'SQLAchemy','<pre>ORM框架</pre>\r\n<p>SQLAlchemy是Python编程语言下的一款ORM框架，该框架建立在数据库API之上，使用关系对象映射进行数据库操作，简言之便是：将对象转换成SQL，然后使用数据API执行SQL并获取执行结果。<br /><img src=\"http://47.93.26.235/static/uploads/1/010sqlalchemy.jpg\" width=\"596\" height=\"401\" />￼<br />SQLAlchemy本身无法操作数据库，其必须以来pymsql等第三方插件，Dialect用于和数据API进行交流，根据配置文件的不同调用不同的数据库API，从而实现对数据库的操作，如：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre class=\"language-markup\"><code>MySQL-Python\r\n    mysql+mysqldb://:@[:]/\r\n  \r\npymysql\r\n    mysql+pymysql://:@/[?]\r\n  \r\nMySQL-Connector\r\n    mysql+mysqlconnector://:@[:]/\r\n  \r\ncx_Oracle\r\n    oracle+cx_oracle://user:pass@host:port/dbname[?key=value&amp;key=value...]\r\n  \r\n更多详见：http://docs.sqlalchemy.org/en/latest/dialects/index.html</code></pre>\r\n<div class=\"cnblogs_code_toolbar\">&nbsp;</div>\r\n</div>\r\n<ul>\r\n<li>底层处理</li>\r\n</ul>\r\n<p>使用 Engine/ConnectionPooling/Dialect 进行数据库操作，Engine使用ConnectionPooling连接数据库，然后再通过Dialect执行SQL语句。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre class=\"language-python\"><code>from sqlalchemy import create_engine</code></pre>\r\n<pre>#创建引擎 </pre>\r\n<pre class=\"language-markup\"><code>engine = create_engine(\"mysql+pymysql://fuzj:123123@127.0.0.1:3306/fuzj\", max_overflow=5) \r\n#执行sql语句 engine.execute(\"INSERT INTO user (name) VALUES (\'dadadadad\')\") result = engine.execute(\'select * from user\') res = result.fetchall() print(res)</code></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>使用 ORM/Schema Type/SQL Expression Language/Engine/ConnectionPooling/Dialect 所有组件对数据进行操作。根据类创建对象，对象转换成SQL，执行SQL。\r\n<ul>\r\n<li>增\r\n<ul>\r\n<li>创建表\r\n<p>ORM功能使用</p>\r\n</li>\r\n</ul>\r\n<div class=\"cnblogs_code\">\r\n<pre class=\"language-markup\"><code>from sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy import Column, Integer, String, ForeignKey, UniqueConstraint, Index\r\nfrom sqlalchemy.orm import sessionmaker, relationship\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\"mysql+pymysql://fuzj:123123@127.0.0.1:3306/123\", max_overflow=5)\r\n\r\nBase = declarative_base()</code></pre>\r\n<pre># 创建单表 </pre>\r\n<pre class=\"language-python\"><code>from sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy import Column, Integer, String, ForeignKey, UniqueConstraint, Index\r\nfrom sqlalchemy.orm import sessionmaker, relationship\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\"mysql+pymysql://fuzj:123123@127.0.0.1:3306/123\", max_overflow=5)\r\n\r\nBase = declarative_base()\r\n\r\n# 创建单表\r\nclass Users(Base):\r\n__tablename__ = \'users\'\r\nid = Column(Integer, primary_key=True)\r\nname = Column(String(32))\r\nextra = Column(String(16))\r\n\r\n__table_args__ = (\r\nUniqueConstraint(\'id\', \'name\', name=\'uix_id_name\'),\r\n   Index(\'ix_id_name\', \'name\', \'extra\'),\r\n)\r\n\r\n# 一对多\r\nclass Favor(Base):\r\n__tablename__ = \'favor\'\r\nnid = Column(Integer, primary_key=True)\r\ncaption = Column(String(50), default=\'red\', unique=True)\r\n\r\nclass Person(Base):\r\n__tablename__ = \'person\'\r\nnid = Column(Integer, primary_key=True)\r\nname = Column(String(32), index=True, nullable=True)\r\nfavor_id = Column(Integer, ForeignKey(\"favor.nid\"))\r\n\r\n# 多对多\r\nclass ServerToGroup(Base):\r\n__tablename__ = \'servertogroup\'\r\nnid = Column(Integer, primary_key=True, autoincrement=True)\r\nserver_id = Column(Integer, ForeignKey(\'server.id\'))\r\ngroup_id = Column(Integer, ForeignKey(\'group.id\'))\r\n\r\nclass Group(Base):\r\n__tablename__ = \'group\'\r\nid = Column(Integer, primary_key=True)\r\nname = Column(String(64), unique=True, nullable=False)\r\n\r\nclass Server(Base):\r\n__tablename__ = \'server\'\r\n\r\nid = Column(Integer, primary_key=True, autoincrement=True)\r\nhostname = Column(String(64), unique=True, nullable=False)\r\nport = Column(Integer, default=22)\r\n\r\nBase.metadata.create_all(engine)  #创建表\r\n# Base.metadata.drop_all(engine)   #删除表 </code></pre>\r\n<div class=\"cnblogs_code_toolbar\">&nbsp;</div>\r\n</div>\r\n</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\">\r\n<ul>\r\n<li>增</li>\r\n</ul>\r\n</div>\r\n<pre class=\"language-python\"><code>obj = Users(name=\"alex0\", extra=\'sb\')\r\nsession.add(obj)\r\nsession.add_all([\r\n    Users(name=\"alex1\", extra=\'sb\'),\r\n    Users(name=\"alex2\", extra=\'sb\'),\r\n])\r\nsession.commit()</code></pre>\r\n<div class=\"cnblogs_code_toolbar\">&nbsp;</div>\r\n</div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>删</li>\r\n</ul>\r\n<div class=\"cnblogs_code\">\r\n<pre class=\"language-python\"><code>session.query(Users).filter(Users.id &gt; 2).delete()\r\nsession.commit()</code></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>改</li>\r\n</ul>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\">&nbsp;</div>\r\n<pre class=\"language-python\"><code>session.query(Users).filter(Users.id &gt; 2).update({\"name\" : \"099\"})\r\nsession.query(Users).filter(Users.id &gt; 2).update({Users.name: Users.name + \"099\"}, synchronize_session=False)\r\nsession.query(Users).filter(Users.id &gt; 2).update({\"num\": Users.num + 1}, synchronize_session=\"evaluate\")\r\nsession.commit()</code></pre>\r\n<div class=\"cnblogs_code_toolbar\">&nbsp;</div>\r\n<div class=\"cnblogs_code_toolbar\">&nbsp;</div>\r\n</div>\r\n<ul>\r\n<li>查</li>\r\n</ul>\r\n<div class=\"cnblogs_code\">\r\n<pre class=\"language-python\"><code>ret = session.query(Users).all()\r\nret = session.query(Users.name, Users.extra).all()\r\nret = session.query(Users).filter_by(name=\'alex\').all()\r\nret = session.query(Users).filter_by(name=\'alex\').first()</code></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>其它</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>#　条件\r\nret = session.query(Users).filter_by(name=\'alex\').all()\r\nret = session.query(Users).filter(Users.id &gt; 1, Users.name == \'eric\').all()\r\nret = session.query(Users).filter(Users.id.between(1, 3), Users.name == \'eric\').all()\r\nret = session.query(Users).filter(Users.id.in_([1,3,4])).all()\r\nret = session.query(Users).filter(~Users.id.in_([1,3,4])).all()\r\nret = session.query(Users).filter(Users.id.in_(session.query(Users.id).filter_by(name=\'eric\'))).all()\r\nfrom sqlalchemy import and_, or_\r\nret = session.query(Users).filter(and_(Users.id &gt; 3, Users.name == \'eric\')).all()\r\nret = session.query(Users).filter(or_(Users.id &lt; 2, Users.name == \'eric\')).all()\r\nret = session.query(Users).filter(\r\n    or_(\r\n        Users.id &lt; 2,\r\n        and_(Users.name == \'eric\', Users.id &gt; 3),\r\n        Users.extra != \"\"\r\n    )).all()\r\n\r\n\r\n# 通配符\r\nret = session.query(Users).filter(Users.name.like(\'e%\')).all()\r\nret = session.query(Users).filter(~Users.name.like(\'e%\')).all()\r\n\r\n# 限制\r\nret = session.query(Users)[1:2]\r\n\r\n# 排序\r\nret = session.query(Users).order_by(Users.name.desc()).all()\r\nret = session.query(Users).order_by(Users.name.desc(), Users.id.asc()).all()\r\n\r\n# 分组\r\nfrom sqlalchemy.sql import func\r\n\r\nret = session.query(Users).group_by(Users.extra).all()\r\nret = session.query(\r\n    func.max(Users.id),\r\n    func.sum(Users.id),\r\n    func.min(Users.id)).group_by(Users.name).all()\r\n\r\nret = session.query(\r\n    func.max(Users.id),\r\n    func.sum(Users.id),\r\n    func.min(Users.id)).group_by(Users.name).having(func.min(Users.id) &gt;2).all()\r\n\r\n# 连表\r\n\r\nret = session.query(Users, Favor).filter(Users.id == Favor.nid).all()\r\n\r\nret = session.query(Person).join(Favor).all()\r\n\r\nret = session.query(Person).join(Favor, isouter=True).all()\r\n\r\n\r\n# 组合\r\nq1 = session.query(Users.name).filter(Users.id &gt; 2)\r\nq2 = session.query(Favor.caption).filter(Favor.nid &lt; 2)\r\nret = q1.union(q2).all()\r\n\r\nq1 = session.query(Users.name).filter(Users.id &gt; 2)\r\nq2 = session.query(Favor.caption).filter(Favor.nid &lt; 2)\r\nret = q1.union_all(q2).all()</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>ORM 指定查询返回数据格式 默认使用query查询返回的结果为一个对象</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>res = session.query(User).all()\r\nprint(res)\r\n#使用for循环遍历列表才能取出name\r\nfor i in res:\r\n    print(i.name)\r\n\r\n输出结果：\r\n[&lt;__main__.User object at 0x10385c438&gt;, &lt;__main__.User object at 0x10385c4a8&gt;, &lt;__main__.User object at 0x10385c550&gt;, &lt;__main__.User object at 0x10385c5f8&gt;, &lt;__main__.User object at 0x10385c6a0&gt;]\r\nfuzj\r\njie\r\n张三\r\n李四\r\n王五</code></pre>\r\n<p>&nbsp;</p>\r\n<p>使用__repr__定义返回的数据</p>\r\n<div class=\"cnblogs_code\">\r\n<pre class=\"language-python\"><code>class User(Base):\r\n    __tablename__ = \'user\'\r\n    nid = Column(Integer,primary_key=True,autoincrement=True)\r\n    name = Column(String(10),nullable=False)\r\n    role = Column(Integer,ForeignKey(\'role.rid\'))\r\n    group = relationship(\"Role\",backref=\'uuu\')    #Role为类名\r\n\r\n    def __repr__(self):\r\n        output = \"(%s,%s,%s)\" %(self.nid,self.name,self.role)\r\n        return output\r\n        \r\nres = session.query(User).all()\r\nprint(res)\r\n\r\n输出：\r\n[(1,fuzj,1), (2,jie,2), (3,张三,2), (4,李四,1), (5,王五,3)]</code></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>ORM 一对多具体使用</p>\r\n<p>mysql表中一对多指的是表A中的数据和表B中的数据存在对应的映射关系，表A中的数据在表B中对应存在多个对应关系，如表A存放用户的角色 DBA，SA，表B中存放用户，表B通过外键关联之表A中，多个用户可以属于同一个角色</p>\r\n<ul>\r\n<li>\r\n<p>设计两张表，user表和role表，</p>\r\n<p>user 表中存放用户，role表中存放用户角色，role表中角色对应user表中多个用户，user表中一个用户只对应role表中一个角色，中间通过外键约束</p>\r\n</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>from sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy import Column, Integer, String,ForeignKey\r\nfrom sqlalchemy.orm import sessionmaker,relationship\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\"mysql+pymysql://fuzj:123.com@127.0.0.1:3306/fuzj?charset=utf8\", max_overflow=5,encoding=\'utf-8\') \r\nBase = declarative_base()\r\n\r\nclass Role(Base):\r\n    __tablename__ = \'role\'\r\n    rid = Column(Integer, primary_key=True, autoincrement=True)    #主键，自增\r\n    role_name = Column(String(10))\r\n\r\n    def __repr__(self):\r\n        output = \"(%s,%s)\" %(self.rid,self.role_name)\r\n        return output\r\n\r\nclass User(Base):\r\n    __tablename__ = \'user\'\r\n    nid = Column(Integer,primary_key=True,autoincrement=True)\r\n    name = Column(String(10),nullable=False)\r\n    role = Column(Integer,ForeignKey(\'role.rid\'))  #外键关联\r\n\r\n    def __repr__(self):\r\n        output = \"(%s,%s,%s)\" %(self.nid,self.name,self.role)\r\n        return output\r\nBase.metadata.create_all(engine)\r\n\r\nSession = sessionmaker(bind=engine)\r\nsession = Session()\r\n\r\n#添加角色数据\r\nsession.add(Role(role_name=\'dba\'))\r\nsession.add(Role(role_name=\'sa\'))\r\nsession.add(Role(role_name=\'net\'))\r\n\r\n#添加用户数据\r\nsession.add_all([\r\n    User(name=\'fuzj\',role=\'1\'),\r\n    User(name=\'jie\',role=\'2\'),\r\n    User(name=\'张三\',role=\'2\'),\r\n    User(name=\'李四\',role=\'1\'),\r\n    User(name=\'王五\',role=\'3\'),\r\n])\r\nsession.commit()\r\nsession.close()</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>普通连表查询</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>res = session.query(User,Role).join(Role).all()    #查询所有用户,及对应的role id\r\nres1 = session.query(User.name,Role.role_name).join(Role).all()  #查询所有用户和角色,\r\nres2 = session.query(User.name,Role.role_name).join(Role,isouter=True).filter(Role.role_name==\'sa\').all() #查询所有DBA的用户\r\nprint(res)\r\nprint(res1)\r\nprint(res2)\r\n\r\n输出结果：\r\n[((1,fuzj,1), (1,dba)), ((2,jie,2), (2,sa)), ((3,张三,2), (2,sa)), ((4,李四,1), (1,dba)), ((5,王五,3), (3,net))]\r\n[(\'fuzj\', \'dba\'), (\'jie\', \'sa\'), (\'张三\', \'sa\'), (\'李四\', \'dba\'), (\'王五\', \'net\')]\r\n[(\'jie\', \'sa\'), (\'张三\', \'sa\')]</code></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>使用relationship 添加影射关系进行查询</p>\r\n<ul>\r\n<li>首先在User表中添加relationship影射关系</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>class User(Base):\r\n    __tablename__ = \'user\'\r\n    nid = Column(Integer,primary_key=True,autoincrement=True)\r\n    name = Column(String(10),nullable=False)\r\n    role = Column(Integer,ForeignKey(\'role.rid\'))\r\n    group = relationship(\"Role\",backref=\'uuu\')    #Role为类名</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>查询</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>#正向查询\r\nprint(\'正向查询\')\r\nres = session.query(User).all()  #查询所有的用户和角色\r\nfor i in res:\r\n    print(i.name,i.group.role_name)    #此时的i.group 就是role表对应的关系\r\nres = session.query(User).filter(User.name==\'fuzj\').first()  #查询fuzj用户和角色\r\nprint(res.name,res.group.role_name)\r\n\r\nprint(\'反向查找\')\r\n#反向查找\r\nres = session.query(Role).filter(Role.role_name ==\'dba\').first()   #查找dba组下的所有用户\r\nprint(res.uuu)   #此时 print的结果为[(1,fuzj,1), (4,李四,1)]\r\nfor i in res.uuu:\r\n    print(i.name,res.role_name)\r\n\r\n输出结果：\r\n正向查询\r\nfuzj dba\r\njie sa\r\n张三 sa\r\n李四 dba\r\n王五 net\r\nfuzj dba\r\n反向查找\r\n[(1,fuzj,1), (4,李四,1)]\r\nfuzj dba\r\n李四 dba</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>\r\n<ul>\r\n<li>\r\n<p>说明</p>\r\n<p>relationship 在user表中创建了新的字段，这个字段只用来存放user表中和role表中的对应关系，在数据库中并不实际存在<br />正向查找： 先从user表中查到符合name的用户之后，此时结果中已经存在和role表中的对应关系，group对象即role表，所以直接使用obj.group.role_name就可以取出对应的角色<br />反向查找：relationship参数中backref=\'uuu\'，会在role表中的每个字段中加入uuu，而uuu对应的就是本字段在user表中对应的所有用户，所以，obj.uuu.name会取出来用户名<br />所谓正向和反向查找是对于relationship关系映射所在的表而说，如果通过该表（user表）去查找对应的关系表（role表），就是正向查找，反正通过对应的关系表（role表）去查找该表（user表）即为反向查找。而relationship往往会和ForeignKey共存在一个表中。</p>\r\n</li>\r\n</ul>\r\n</li>\r\n<li>\r\n<p>ORM 多对多具体使用</p>\r\n<p>Mysql多对多关系指的是两张表A和B本没有任何关系，而是通过第三张表C建立关系，通过关系表C，使得表A在表B中存在多个关联数据，表B在表A中同样存在多个关联数据</p>\r\n<ul>\r\n<li>创建三张表 host表 hostuser表 host_to_hostuser表</li>\r\n</ul>\r\n<p>host表中存放主机，hostuser表中存放主机的用户， host_to_hostuser表中存放主机用户对应的主机，hostuser表中用户对应host表中多个主机，host表中主机对应hostuser表中多个用户，中间关系通过host_to_hostuser表进行关联。host_to_hostuser和host表、user表进行外键约束</p>\r\n</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>from sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy import Column, Integer, String,ForeignKey\r\nfrom sqlalchemy.orm import sessionmaker,relationship\r\nfrom sqlalchemy import create_engine\r\nclass Host(Base):\r\n    __tablename__ = \'host\'\r\n    nid = Column(Integer, primary_key=True,autoincrement=True)\r\n    hostname = Column(String(32))\r\n    port = Column(String(32))\r\n    ip = Column(String(32))\r\n\r\nclass HostUser(Base):\r\n    __tablename__ = \'host_user\'\r\n    nid = Column(Integer, primary_key=True,autoincrement=True)\r\n    username = Column(String(32))\r\n\r\nclass HostToHostUser(Base):\r\n    __tablename__ = \'host_to_host_user\'\r\n    nid = Column(Integer, primary_key=True,autoincrement=True)\r\n\r\n    host_id = Column(Integer,ForeignKey(\'host.nid\'))\r\n    host_user_id = Column(Integer,ForeignKey(\'host_user.nid\'))\r\n\r\nBase.metadata.create_all(engine)\r\n\r\nSession = sessionmaker(bind=engine)\r\nsession = Session()\r\n\r\n#添加数据\r\nsession.add_all([\r\n    Host(hostname=\'c1\',port=\'22\',ip=\'1.1.1.1\'),\r\n    Host(hostname=\'c2\',port=\'22\',ip=\'1.1.1.2\'),\r\n    Host(hostname=\'c3\',port=\'22\',ip=\'1.1.1.3\'),\r\n    Host(hostname=\'c4\',port=\'22\',ip=\'1.1.1.4\'),\r\n    Host(hostname=\'c5\',port=\'22\',ip=\'1.1.1.5\'),\r\n])\r\n\r\nsession.add_all([\r\n    HostUser(username=\'root\'),\r\n    HostUser(username=\'db\'),\r\n    HostUser(username=\'nb\'),\r\n    HostUser(username=\'sb\'),\r\n])\r\n\r\nsession.add_all([\r\n    HostToHostUser(host_id=1,host_user_id=1),\r\n    HostToHostUser(host_id=1,host_user_id=2),\r\n    HostToHostUser(host_id=1,host_user_id=3),\r\n    HostToHostUser(host_id=2,host_user_id=2),\r\n    HostToHostUser(host_id=2,host_user_id=4),\r\n    HostToHostUser(host_id=2,host_user_id=3),\r\n])\r\n\r\nsession.commit()\r\nsession.close()</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>普通多次查询</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>host_id = session.query(Host.nid).filter(Host.hostname==\'c2\').first()   #查找hostbane对应的hostid,返回结果为元组(2,)\r\nuser_id_list = session.query(HostToHostUser.host_user_id).filter(HostToHostUser.host_id==host_id[0]).all()  #查询hostid对应的所有userid\r\nuser_id_list = zip(*user_id_list)   #user_id_list 初始值为[(2,), (4,), (3,)],使用zip转换为[2,4,3]对象\r\n#print(list(user_id_list))    #结果为[(2, 4, 3)]\r\nuser_list = session.query(HostUser.username).filter(HostUser.nid.in_(list(user_id_list)[0])).all()  #查询符合条件的用户\r\nprint(user_list)\r\n\r\n#或者：\r\nuser_id_list = session.query(HostToHostUser.host_user_id).join(Host).filter(Host.hostname==\'c2\').all()\r\nuser_id_list = zip(*user_id_list)\r\nuser_list = session.query(HostUser.username).filter(HostUser.nid.in_(list(user_id_list)[0])).all()\r\nprint(user_list)\r\n\r\n#输出结果 [(\'db\',), (\'nb\',), (\'sb\',)]</code></pre>\r\n<p>&nbsp;</p>\r\n<p>使用relationship映射关系查询</p>\r\n<ul>\r\n<li>首先在关系表Host_to_hostuser中加入relationship关系映射</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>class HostToHostUser(Base):\r\n    __tablename__ = \'host_to_host_user\'\r\n    nid = Column(Integer, primary_key=True,autoincrement=True)\r\n\r\n    host_id = Column(Integer,ForeignKey(\'host.nid\'))\r\n    host_user_id = Column(Integer,ForeignKey(\'host_user.nid\'))\r\n    host = relationship(\'Host\',backref=\'h\') #对应host表\r\n    host_user = relationship(\'HostUser\',backref=\'u\') #对应host_user表</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>查询</li>\r\n</ul>\r\n<pre class=\"language-python\"><code>#查找一个服务器上有哪些用户\r\nres = session.query(Host).filter(Host.hostname==\'c2\').first()  #返回的是符合条件的服务器对象\r\nres2 = res.h    #通过relationship反向查找 Host_to_Hostuser中的对应关系\r\nfor i in res2:   #i为host_to_hostuser表和host表中c2主机有对应关系的条目\r\n    print(i.host_user.username)        #正向查找, 通过relationship ,找到host_to_hostuser中对应的hostuser 即i.host_user\r\n\r\n#查找此用户有哪些服务器\r\nres = session.query(HostUser).filter(HostUser.username==\'sb\').first()\r\nfor i in res.u:\r\n    print(i.host.hostname)</code></pre>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>\r\n<ul>\r\n<li>\r\n<p>扩展查询</p>\r\n</li>\r\n</ul>\r\n<p>不查询关系表，直接在hostuser表中指定关系表，然后获取host表</p>\r\n</li>\r\n</ul>\r\n<p>在host表中使用 relationship的secondary指定关系表。</p>\r\n<pre class=\"language-python\"><code>class Host(Base):\r\n    __tablename__ = \'host\'\r\n    nid = Column(Integer, primary_key=True,autoincrement=True)\r\n    hostname = Column(String(32))\r\n    port = Column(String(32))\r\n    ip = Column(String(32))\r\n    host_user = relationship(\'HostUser\',secondary=lambda :HostToHostUser.__table__,backref=\'h\')\r\n\r\n注意使用lambda是为了使表的顺序不在闲置\r\n\r\n查询：\r\n\r\nhost_obj = session.query(Host).filter(Host.hostname==\'c1\').first()\r\nfor i in host_obj.host_user:\r\n    print(i.username)</code></pre>\r\n<p>&nbsp;</p>','2017-11-24 01:30:39',1),(47,'通过微信企业号发送通知信息','<p><span style=\"font-size: 18pt;\">通过微信企业号发送通知信息</span></p>\r\n<pre class=\"language-python\"><code># coding=utf-8\r\nimport requests\r\nimport json\r\nimport os\r\n\r\nclass Recruit_alarm():\r\n    ID = \"wwf51b2091e9e0d51d\"  # 微信企业号ID\r\n    Secret = \"LxTHd5MOZU4H6bYijzTqnv_a1qBB9Luq7p3u7f4cT5I\"  # 企业应用秘钥，可以是自建的应用\r\n    def __init__(self, ID=ID, Secret=Secret):\r\n        # 获取新token的API，以官网为准https://work.weixin.qq.com/api/doc#10012\r\n        self.token_url = \"https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid={id}&amp;corpsecret={secret}\".format(id=ID, secret=Secret)\r\n        self.app_ID = 1000002   # 企业应用ID，可以是自建的应用\r\n\r\n    def get_new_token(self):\r\n        # 更新文件中保存的旧token，获取的token默认有效期为2小时。\r\n        res = requests.get(self.token_url).text\r\n        new_token = json.loads(res)[\"access_token\"]\r\n        with open(\'token.txt\', \'w\', encoding=\'utf-8\') as f:\r\n            f.write(new_token)\r\n\r\n    def get_old_token(slef):\r\n        # 从文件中取出保存的token\r\n        base_path = os.path.abspath(os.path.dirname(\"__file__\"))\r\n        token_path = os.path.join(base_path,\"token.txt\")\r\n        with open(token_path, \'r\') as f:\r\n            saves_token = f.read()\r\n        return saves_token\r\n\r\n    def send_text(self, content):\r\n        # 微信规定发送消息的方法为往官方API提交post请求，这里是post提交数据的固定格式，更多需求参考官方文档\r\n        myload = {\r\n        \"touser\": \"@all\",\r\n        \"toparty\": \"\",\r\n        \"totag\": \"\",\r\n        \"msgtype\": \"text\",\r\n        \"agentid\": self.app_ID,\r\n        \"text\": {\r\n            \"content\": content\r\n            },\r\n        \"safe\": 0\r\n        }\r\n        while True:\r\n            token_ = self.get_old_token()\r\n            # 发送消息的API，以官网为准\r\n            send_url = \"https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token={token}\".format(token=token_)\r\n            res = requests.post(url=send_url, data=json.dumps(myload))\r\n            if json.loads(res.text)[\"errcode\"] == 0:\r\n                # 如果成功，跳出循环\r\n                break\r\n            else:\r\n                # 如果发送信息不成功，更新数据库中的token\r\n                self.get_new_token()\r\n\r\n\r\nif __name__==\"__main__\":\r\n    content = \"测试 ：马乐遥！\\n我的微博\"  # 需要发送的消息\r\n    content1 = \"职位：业务运维工程师(oy4FsA)\\n公司：马上消费金融股份有限公司\\n工作地点：重庆\\n工资：1-2万/月\\n发布日期：11-30\\n详情\"\r\n    alarm = Recruit_alarm()\r\n    alarm.send_text(content)</code></pre>','2017-12-02 00:37:00',1);
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `upload_image`
--

DROP TABLE IF EXISTS `upload_image`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `upload_image` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `addr` varchar(200) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  `image_tag` varchar(30) NOT NULL,
  `image_md5` varchar(32) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `author_id` (`author_id`),
  CONSTRAINT `upload_image_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `upload_image`
--

LOCK TABLES `upload_image` WRITE;
/*!40000 ALTER TABLE `upload_image` DISABLE KEYS */;
INSERT INTO `upload_image` VALUES (1,'http://47.93.26.235/static/uploads/1/00大学.jpg',1,'article','909e27e27f6222c1326dd8ae8ed30147'),(2,'http://47.93.26.235/static/uploads/1/02刚毕业.jpg',1,'article','42ababc910003cb07201526a9c4a0cdd'),(3,'http://47.93.26.235/static/uploads/1/03keepalived.conf.png',1,'article','e76e92fb81ff08404bc1aaccd31869d2'),(4,'http://47.93.26.235/static/uploads/1/041.jpg',1,'article','7fb8a3b2302b5131a7dad05f4ff1a1bf'),(5,'http://47.93.26.235/static/uploads/1/052.jpg',1,'article','3d488aac33e076c0a19eb73992e05f02'),(6,'http://47.93.26.235/static/uploads/1/06IMG_20171013_190330.jpg',1,'article','f8bf2e07506db5733ffea2dbbde7f4d5'),(7,'http://47.93.26.235/static/uploads/1/07IMG_20171007_125949.jpg',1,'article','bdae88b8adeb74e2efaf25a041d09d3e'),(8,'http://47.93.26.235/static/uploads/1/08IMG_20170907_074840.jpg',1,'article','0f0ddbb4c837cc4bc0c7b4a5acec609b'),(9,'http://47.93.26.235/static/uploads/1/09IMG_20170907_074828.jpg',1,'article','794e5fc33c8faeaf2d5235c773136ddc'),(10,'http://47.93.26.235/static/uploads/1/010sqlalchemy.jpg',1,'article','12426c28090e0758e7b124bafd5cfcbe');
/*!40000 ALTER TABLE `upload_image` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `telephone` varchar(11) NOT NULL,
  `username` varchar(50) NOT NULL,
  `nickname` varchar(50) NOT NULL,
  `password` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (1,'123','123','马乐遥','pbkdf2:sha256:50000$deH8vzbE$06038399e5a9dff87262b2ec3a2862f3762392e185c11cf63621f9ada1c53455'),(2,'222','222','222','pbkdf2:sha256:50000$7paJsbZf$f0c6b5ebee804966f4ae46011d2e42fe7f5a2a8428f3d8c86c08e52ab7093130');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-03-05 23:02:26
